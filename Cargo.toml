[package]
name = "archlens"
version = "1.0.0"
edition = "2021"
description = "Advanced architecture analysis tool with AI-powered insights for code quality, SOLID principles, and technical debt assessment"
license = "MIT"
authors = ["ArchLens Contributors"]
repository = "https://github.com/yourusername/archlens"
homepage = "https://github.com/yourusername/archlens"
documentation = "https://github.com/yourusername/archlens/wiki"
readme = "README.md"
keywords = ["architecture", "analysis", "code-quality", "ai", "mcp"]
categories = ["development-tools", "command-line-utilities"]
exclude = [
    "target/",
    "mcp/node_modules/",
    "*.log",
    "temp_*",
    "test_*"
]

[[bin]]
name = "archlens"
path = "src/main.rs"

# New MCP server binary (Rust)
[[bin]]
name = "archlens-mcp"
path = "src/bin/archlens_mcp.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
# behind feature to avoid GUI deps in headless tests
 tauri-build = { version = "1.0", features = [], optional = true }

[dependencies]
# GUI deps behind feature `gui`
 tauri = { version = "1.7", features = ["dialog-open", "dialog-save", "fs-copy-file", "fs-create-dir", "fs-exists", "fs-read-dir", "fs-read-file", "fs-remove-dir", "fs-remove-file", "fs-rename-file", "fs-write-file", "shell-open"], optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.10", features = ["v4", "serde"] }
# Optional tree-sitter stack (enabled via feature `tree_sitter`)
tree-sitter = { version = "0.20", optional = true }
tree-sitter-rust = { version = "0.20", optional = true }
tree-sitter-javascript = { version = "0.20", optional = true }
tree-sitter-typescript = { version = "0.20", optional = true }
tree-sitter-python = { version = "0.20", optional = true }
thiserror = "1.0"
anyhow = "1.0"
walkdir = "2.4"
regex = "1.11"
petgraph = "0.6"
tracing = "0.1"
tracing-subscriber = "0.3"
ignore = "0.4"
tokio = { version = "1.0", features = ["full"] }
# New deps for MCP server
schemars = { version = "0.8", features = ["preserve_order"] }
axum = { version = "0.7", features = ["macros", "json", "http1", "http2"] }
tokio-stream = "0.1"
futures-util = "0.3"

[features]
# default headless (no GUI/tauri) to keep CI/tests slim
 default = []
 gui = ["dep:tauri"]
 tauri_build = ["dep:tauri-build"]
 custom-protocol = ["tauri/custom-protocol"]
 # optional feature gate for tree-sitter based parsing (future work)
 tree_sitter = [
  "dep:tree-sitter",
  "dep:tree-sitter-rust",
  "dep:tree-sitter-javascript",
  "dep:tree-sitter-typescript",
  "dep:tree-sitter-python"
]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.1"
reqwest = { version = "0.11", default-features = false, features = ["blocking", "json", "rustls-tls"] }
