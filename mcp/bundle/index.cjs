#!/usr/bin/env node
(()=>{var e={317:e=>{"use strict";e.exports=require("child_process")},896:e=>{"use strict";e.exports=require("fs")},857:e=>{"use strict";e.exports=require("os")},928:e=>{"use strict";e.exports=require("path")},872:(e,t,s)=>{"use strict";s.r(t);s.d(t,{Server:()=>Server});var r=s(55);class Protocol{constructor(e){this._options=e;this._requestMessageId=0;this._requestHandlers=new Map;this._requestHandlerAbortControllers=new Map;this._notificationHandlers=new Map;this._responseHandlers=new Map;this._progressHandlers=new Map;this.setNotificationHandler(r.CancelledNotificationSchema,(e=>{const t=this._requestHandlerAbortControllers.get(e.params.requestId);t===null||t===void 0?void 0:t.abort(e.params.reason)}));this.setNotificationHandler(r.ProgressNotificationSchema,(e=>{this._onprogress(e)}));this.setRequestHandler(r.PingRequestSchema,(e=>({})))}async connect(e){this._transport=e;this._transport.onclose=()=>{this._onclose()};this._transport.onerror=e=>{this._onerror(e)};this._transport.onmessage=e=>{if(!("method"in e)){this._onresponse(e)}else if("id"in e){this._onrequest(e)}else{this._onnotification(e)}};await this._transport.start()}_onclose(){var e;const t=this._responseHandlers;this._responseHandlers=new Map;this._progressHandlers.clear();this._transport=undefined;(e=this.onclose)===null||e===void 0?void 0:e.call(this);const s=new r.McpError(r.ErrorCode.ConnectionClosed,"Connection closed");for(const e of t.values()){e(s)}}_onerror(e){var t;(t=this.onerror)===null||t===void 0?void 0:t.call(this,e)}_onnotification(e){var t;const s=(t=this._notificationHandlers.get(e.method))!==null&&t!==void 0?t:this.fallbackNotificationHandler;if(s===undefined){return}Promise.resolve().then((()=>s(e))).catch((e=>this._onerror(new Error(`Uncaught error in notification handler: ${e}`))))}_onrequest(e){var t,s;const n=(t=this._requestHandlers.get(e.method))!==null&&t!==void 0?t:this.fallbackRequestHandler;if(n===undefined){(s=this._transport)===null||s===void 0?void 0:s.send({jsonrpc:"2.0",id:e.id,error:{code:r.ErrorCode.MethodNotFound,message:"Method not found"}}).catch((e=>this._onerror(new Error(`Failed to send an error response: ${e}`))));return}const a=new AbortController;this._requestHandlerAbortControllers.set(e.id,a);Promise.resolve().then((()=>n(e,{signal:a.signal}))).then((t=>{var s;if(a.signal.aborted){return}return(s=this._transport)===null||s===void 0?void 0:s.send({result:t,jsonrpc:"2.0",id:e.id})}),(t=>{var s,n;if(a.signal.aborted){return}return(s=this._transport)===null||s===void 0?void 0:s.send({jsonrpc:"2.0",id:e.id,error:{code:Number.isSafeInteger(t["code"])?t["code"]:r.ErrorCode.InternalError,message:(n=t.message)!==null&&n!==void 0?n:"Internal error"}})})).catch((e=>this._onerror(new Error(`Failed to send response: ${e}`)))).finally((()=>{this._requestHandlerAbortControllers.delete(e.id)}))}_onprogress(e){const{progress:t,total:s,progressToken:r}=e.params;const n=this._progressHandlers.get(Number(r));if(n===undefined){this._onerror(new Error(`Received a progress notification for an unknown token: ${JSON.stringify(e)}`));return}n({progress:t,total:s})}_onresponse(e){const t=e.id;const s=this._responseHandlers.get(Number(t));if(s===undefined){this._onerror(new Error(`Received a response for an unknown message ID: ${JSON.stringify(e)}`));return}this._responseHandlers.delete(Number(t));this._progressHandlers.delete(Number(t));if("result"in e){s(e)}else{const t=new r.McpError(e.error.code,e.error.message,e.error.data);s(t)}}get transport(){return this._transport}async close(){var e;await((e=this._transport)===null||e===void 0?void 0:e.close())}request(e,t,s){return new Promise(((r,n)=>{var a,i,o;if(!this._transport){n(new Error("Not connected"));return}if(((a=this._options)===null||a===void 0?void 0:a.enforceStrictCapabilities)===true){this.assertCapabilityForMethod(e.method)}(i=s===null||s===void 0?void 0:s.signal)===null||i===void 0?void 0:i.throwIfAborted();const c=this._requestMessageId++;const d={...e,jsonrpc:"2.0",id:c};if(s===null||s===void 0?void 0:s.onprogress){this._progressHandlers.set(c,s.onprogress);d.params={...e.params,_meta:{progressToken:c}}}this._responseHandlers.set(c,(e=>{var a;if((a=s===null||s===void 0?void 0:s.signal)===null||a===void 0?void 0:a.aborted){return}if(e instanceof Error){return n(e)}try{const s=t.parse(e.result);r(s)}catch(e){n(e)}}));(o=s===null||s===void 0?void 0:s.signal)===null||o===void 0?void 0:o.addEventListener("abort",(()=>{var e,t;const r=(e=s===null||s===void 0?void 0:s.signal)===null||e===void 0?void 0:e.reason;this._responseHandlers.delete(c);this._progressHandlers.delete(c);(t=this._transport)===null||t===void 0?void 0:t.send({jsonrpc:"2.0",method:"cancelled",params:{requestId:c,reason:String(r)}});n(r)}));this._transport.send(d).catch(n)}))}async notification(e){if(!this._transport){throw new Error("Not connected")}this.assertNotificationCapability(e.method);const t={...e,jsonrpc:"2.0"};await this._transport.send(t)}setRequestHandler(e,t){const s=e.shape.method.value;this.assertRequestHandlerCapability(s);this._requestHandlers.set(s,((s,r)=>Promise.resolve(t(e.parse(s),r))))}removeRequestHandler(e){this._requestHandlers.delete(e)}setNotificationHandler(e,t){this._notificationHandlers.set(e.shape.method.value,(s=>Promise.resolve(t(e.parse(s)))))}removeNotificationHandler(e){this._notificationHandlers.delete(e)}}class Server extends Protocol{constructor(e,t){super(t);this._serverInfo=e;this._capabilities=t.capabilities;this.setRequestHandler(r.InitializeRequestSchema,(e=>this._oninitialize(e)));this.setNotificationHandler(r.InitializedNotificationSchema,(()=>{var e;return(e=this.oninitialized)===null||e===void 0?void 0:e.call(this)}))}assertCapabilityForMethod(e){var t,s;switch(e){case"sampling/createMessage":if(!((t=this._clientCapabilities)===null||t===void 0?void 0:t.sampling)){throw new Error(`Client does not support sampling (required for ${e})`)}break;case"roots/list":if(!((s=this._clientCapabilities)===null||s===void 0?void 0:s.roots)){throw new Error(`Client does not support listing roots (required for ${e})`)}break;case"ping":break}}assertNotificationCapability(e){switch(e){case"notifications/message":if(!this._capabilities.logging){throw new Error(`Server does not support logging (required for ${e})`)}break;case"notifications/resources/updated":case"notifications/resources/list_changed":if(!this._capabilities.resources){throw new Error(`Server does not support notifying about resources (required for ${e})`)}break;case"notifications/tools/list_changed":if(!this._capabilities.tools){throw new Error(`Server does not support notifying of tool list changes (required for ${e})`)}break;case"notifications/prompts/list_changed":if(!this._capabilities.prompts){throw new Error(`Server does not support notifying of prompt list changes (required for ${e})`)}break;case"notifications/cancelled":break;case"notifications/progress":break}}assertRequestHandlerCapability(e){switch(e){case"sampling/createMessage":if(!this._capabilities.sampling){throw new Error(`Server does not support sampling (required for ${e})`)}break;case"logging/setLevel":if(!this._capabilities.logging){throw new Error(`Server does not support logging (required for ${e})`)}break;case"prompts/get":case"prompts/list":if(!this._capabilities.prompts){throw new Error(`Server does not support prompts (required for ${e})`)}break;case"resources/list":case"resources/templates/list":case"resources/read":if(!this._capabilities.resources){throw new Error(`Server does not support resources (required for ${e})`)}break;case"tools/call":case"tools/list":if(!this._capabilities.tools){throw new Error(`Server does not support tools (required for ${e})`)}break;case"ping":case"initialize":break}}async _oninitialize(e){const t=e.params.protocolVersion;this._clientCapabilities=e.params.capabilities;this._clientVersion=e.params.clientInfo;return{protocolVersion:r.SUPPORTED_PROTOCOL_VERSIONS.includes(t)?t:r.LATEST_PROTOCOL_VERSION,capabilities:this.getCapabilities(),serverInfo:this._serverInfo}}getClientCapabilities(){return this._clientCapabilities}getClientVersion(){return this._clientVersion}getCapabilities(){return this._capabilities}async ping(){return this.request({method:"ping"},r.EmptyResultSchema)}async createMessage(e,t){return this.request({method:"sampling/createMessage",params:e},r.CreateMessageResultSchema,t)}async listRoots(e,t){return this.request({method:"roots/list",params:e},r.ListRootsResultSchema,t)}async sendLoggingMessage(e){return this.notification({method:"notifications/message",params:e})}async sendResourceUpdated(e){return this.notification({method:"notifications/resources/updated",params:e})}async sendResourceListChanged(){return this.notification({method:"notifications/resources/list_changed"})}async sendToolListChanged(){return this.notification({method:"notifications/tools/list_changed"})}async sendPromptListChanged(){return this.notification({method:"notifications/prompts/list_changed"})}}},326:(e,t,s)=>{"use strict";s.r(t);s.d(t,{StdioServerTransport:()=>StdioServerTransport});const r=require("node:process");var n=s(55);class ReadBuffer{append(e){this._buffer=this._buffer?Buffer.concat([this._buffer,e]):e}readMessage(){if(!this._buffer){return null}const e=this._buffer.indexOf("\n");if(e===-1){return null}const t=this._buffer.toString("utf8",0,e);this._buffer=this._buffer.subarray(e+1);return deserializeMessage(t)}clear(){this._buffer=undefined}}function deserializeMessage(e){return n.JSONRPCMessageSchema.parse(JSON.parse(e))}function serializeMessage(e){return JSON.stringify(e)+"\n"}class StdioServerTransport{constructor(e=r.stdin,t=r.stdout){this._stdin=e;this._stdout=t;this._readBuffer=new ReadBuffer;this._started=false;this._ondata=e=>{this._readBuffer.append(e);this.processReadBuffer()};this._onerror=e=>{var t;(t=this.onerror)===null||t===void 0?void 0:t.call(this,e)}}async start(){if(this._started){throw new Error("StdioServerTransport already started! If using Server class, note that connect() calls start() automatically.")}this._started=true;this._stdin.on("data",this._ondata);this._stdin.on("error",this._onerror)}processReadBuffer(){var e,t;while(true){try{const t=this._readBuffer.readMessage();if(t===null){break}(e=this.onmessage)===null||e===void 0?void 0:e.call(this,t)}catch(e){(t=this.onerror)===null||t===void 0?void 0:t.call(this,e)}}}async close(){var e;this._stdin.off("data",this._ondata);this._stdin.off("error",this._onerror);this._readBuffer.clear();(e=this.onclose)===null||e===void 0?void 0:e.call(this)}send(e){return new Promise((t=>{const s=serializeMessage(e);if(this._stdout.write(s)){t()}else{this._stdout.once("drain",t)}}))}}},55:(e,t,s)=>{"use strict";s.r(t);s.d(t,{BlobResourceContentsSchema:()=>We,CallToolRequestSchema:()=>St,CallToolResultSchema:()=>bt,CancelledNotificationSchema:()=>Ne,ClientCapabilitiesSchema:()=>je,ClientNotificationSchema:()=>zt,ClientRequestSchema:()=>qt,ClientResultSchema:()=>Ft,CompatibilityCallToolResultSchema:()=>xt,CompleteRequestSchema:()=>Ot,CompleteResultSchema:()=>jt,CreateMessageRequestSchema:()=>Pt,CreateMessageResultSchema:()=>It,CursorSchema:()=>ve,EmbeddedResourceSchema:()=>ht,EmptyResultSchema:()=>Ae,ErrorCode:()=>Ee,GetPromptRequestSchema:()=>ut,GetPromptResultSchema:()=>ft,ImageContentSchema:()=>pt,ImplementationSchema:()=>Oe,InitializeRequestSchema:()=>$e,InitializeResultSchema:()=>Me,InitializedNotificationSchema:()=>De,JSONRPCErrorSchema:()=>Pe,JSONRPCMessageSchema:()=>Ie,JSONRPCNotificationSchema:()=>ke,JSONRPCRequestSchema:()=>Te,JSONRPCResponseSchema:()=>Re,JSONRPC_VERSION:()=>_e,LATEST_PROTOCOL_VERSION:()=>fe,ListPromptsRequestSchema:()=>ct,ListPromptsResultSchema:()=>dt,ListResourceTemplatesRequestSchema:()=>Xe,ListResourceTemplatesResultSchema:()=>Qe,ListResourcesRequestSchema:()=>Je,ListResourcesResultSchema:()=>Ye,ListRootsRequestSchema:()=>Lt,ListRootsResultSchema:()=>Mt,ListToolsRequestSchema:()=>yt,ListToolsResultSchema:()=>vt,LoggingLevelSchema:()=>Ct,LoggingMessageNotificationSchema:()=>Tt,McpError:()=>McpError,ModelHintSchema:()=>kt,ModelPreferencesSchema:()=>Rt,NotificationSchema:()=>we,PaginatedRequestSchema:()=>Ue,PaginatedResultSchema:()=>He,PingRequestSchema:()=>qe,ProgressNotificationSchema:()=>Fe,ProgressSchema:()=>ze,ProgressTokenSchema:()=>ye,PromptArgumentSchema:()=>it,PromptListChangedNotificationSchema:()=>gt,PromptMessageSchema:()=>mt,PromptReferenceSchema:()=>Nt,PromptSchema:()=>ot,ReadResourceRequestSchema:()=>et,ReadResourceResultSchema:()=>tt,RequestIdSchema:()=>Ze,RequestSchema:()=>xe,ResourceContentsSchema:()=>Ve,ResourceListChangedNotificationSchema:()=>st,ResourceReferenceSchema:()=>At,ResourceSchema:()=>Ge,ResourceTemplateSchema:()=>Ke,ResourceUpdatedNotificationSchema:()=>at,ResultSchema:()=>Ce,RootSchema:()=>$t,RootsListChangedNotificationSchema:()=>Dt,SUPPORTED_PROTOCOL_VERSIONS:()=>ge,SamplingMessageSchema:()=>Et,ServerCapabilitiesSchema:()=>Le,ServerNotificationSchema:()=>Ht,ServerRequestSchema:()=>Ut,ServerResultSchema:()=>Vt,SetLevelRequestSchema:()=>Zt,SubscribeRequestSchema:()=>rt,TextContentSchema:()=>lt,TextResourceContentsSchema:()=>Be,ToolListChangedNotificationSchema:()=>wt,ToolSchema:()=>_t,UnsubscribeRequestSchema:()=>nt});var r;(function(e){e.assertEqual=e=>{};function assertIs(e){}e.assertIs=assertIs;function assertNever(e){throw new Error}e.assertNever=assertNever;e.arrayToEnum=e=>{const t={};for(const s of e){t[s]=s}return t};e.getValidEnumValues=t=>{const s=e.objectKeys(t).filter((e=>typeof t[t[e]]!=="number"));const r={};for(const e of s){r[e]=t[e]}return e.objectValues(r)};e.objectValues=t=>e.objectKeys(t).map((function(e){return t[e]}));e.objectKeys=typeof Object.keys==="function"?e=>Object.keys(e):e=>{const t=[];for(const s in e){if(Object.prototype.hasOwnProperty.call(e,s)){t.push(s)}}return t};e.find=(e,t)=>{for(const s of e){if(t(s))return s}return undefined};e.isInteger=typeof Number.isInteger==="function"?e=>Number.isInteger(e):e=>typeof e==="number"&&Number.isFinite(e)&&Math.floor(e)===e;function joinValues(e,t=" | "){return e.map((e=>typeof e==="string"?`'${e}'`:e)).join(t)}e.joinValues=joinValues;e.jsonStringifyReplacer=(e,t)=>{if(typeof t==="bigint"){return t.toString()}return t}})(r||(r={}));var n;(function(e){e.mergeShapes=(e,t)=>({...e,...t})})(n||(n={}));const a=r.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]);const getParsedType=e=>{const t=typeof e;switch(t){case"undefined":return a.undefined;case"string":return a.string;case"number":return Number.isNaN(e)?a.nan:a.number;case"boolean":return a.boolean;case"function":return a.function;case"bigint":return a.bigint;case"symbol":return a.symbol;case"object":if(Array.isArray(e)){return a.array}if(e===null){return a.null}if(e.then&&typeof e.then==="function"&&e.catch&&typeof e.catch==="function"){return a.promise}if(typeof Map!=="undefined"&&e instanceof Map){return a.map}if(typeof Set!=="undefined"&&e instanceof Set){return a.set}if(typeof Date!=="undefined"&&e instanceof Date){return a.date}return a.object;default:return a.unknown}};const i=r.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]);const quotelessJson=e=>{const t=JSON.stringify(e,null,2);return t.replace(/"([^"]+)":/g,"$1:")};class ZodError extends Error{get errors(){return this.issues}constructor(e){super();this.issues=[];this.addIssue=e=>{this.issues=[...this.issues,e]};this.addIssues=(e=[])=>{this.issues=[...this.issues,...e]};const t=new.target.prototype;if(Object.setPrototypeOf){Object.setPrototypeOf(this,t)}else{this.__proto__=t}this.name="ZodError";this.issues=e}format(e){const t=e||function(e){return e.message};const s={_errors:[]};const processError=e=>{for(const r of e.issues){if(r.code==="invalid_union"){r.unionErrors.map(processError)}else if(r.code==="invalid_return_type"){processError(r.returnTypeError)}else if(r.code==="invalid_arguments"){processError(r.argumentsError)}else if(r.path.length===0){s._errors.push(t(r))}else{let e=s;let n=0;while(n<r.path.length){const s=r.path[n];const a=n===r.path.length-1;if(!a){e[s]=e[s]||{_errors:[]}}else{e[s]=e[s]||{_errors:[]};e[s]._errors.push(t(r))}e=e[s];n++}}}};processError(this);return s}static assert(e){if(!(e instanceof ZodError)){throw new Error(`Not a ZodError: ${e}`)}}toString(){return this.message}get message(){return JSON.stringify(this.issues,r.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(e=e=>e.message){const t={};const s=[];for(const r of this.issues){if(r.path.length>0){const s=r.path[0];t[s]=t[s]||[];t[s].push(e(r))}else{s.push(e(r))}}return{formErrors:s,fieldErrors:t}}get formErrors(){return this.flatten()}}ZodError.create=e=>{const t=new ZodError(e);return t};const errorMap=(e,t)=>{let s;switch(e.code){case i.invalid_type:if(e.received===a.undefined){s="Required"}else{s=`Expected ${e.expected}, received ${e.received}`}break;case i.invalid_literal:s=`Invalid literal value, expected ${JSON.stringify(e.expected,r.jsonStringifyReplacer)}`;break;case i.unrecognized_keys:s=`Unrecognized key(s) in object: ${r.joinValues(e.keys,", ")}`;break;case i.invalid_union:s=`Invalid input`;break;case i.invalid_union_discriminator:s=`Invalid discriminator value. Expected ${r.joinValues(e.options)}`;break;case i.invalid_enum_value:s=`Invalid enum value. Expected ${r.joinValues(e.options)}, received '${e.received}'`;break;case i.invalid_arguments:s=`Invalid function arguments`;break;case i.invalid_return_type:s=`Invalid function return type`;break;case i.invalid_date:s=`Invalid date`;break;case i.invalid_string:if(typeof e.validation==="object"){if("includes"in e.validation){s=`Invalid input: must include "${e.validation.includes}"`;if(typeof e.validation.position==="number"){s=`${s} at one or more positions greater than or equal to ${e.validation.position}`}}else if("startsWith"in e.validation){s=`Invalid input: must start with "${e.validation.startsWith}"`}else if("endsWith"in e.validation){s=`Invalid input: must end with "${e.validation.endsWith}"`}else{r.assertNever(e.validation)}}else if(e.validation!=="regex"){s=`Invalid ${e.validation}`}else{s="Invalid"}break;case i.too_small:if(e.type==="array")s=`Array must contain ${e.exact?"exactly":e.inclusive?`at least`:`more than`} ${e.minimum} element(s)`;else if(e.type==="string")s=`String must contain ${e.exact?"exactly":e.inclusive?`at least`:`over`} ${e.minimum} character(s)`;else if(e.type==="number")s=`Number must be ${e.exact?`exactly equal to `:e.inclusive?`greater than or equal to `:`greater than `}${e.minimum}`;else if(e.type==="bigint")s=`Number must be ${e.exact?`exactly equal to `:e.inclusive?`greater than or equal to `:`greater than `}${e.minimum}`;else if(e.type==="date")s=`Date must be ${e.exact?`exactly equal to `:e.inclusive?`greater than or equal to `:`greater than `}${new Date(Number(e.minimum))}`;else s="Invalid input";break;case i.too_big:if(e.type==="array")s=`Array must contain ${e.exact?`exactly`:e.inclusive?`at most`:`less than`} ${e.maximum} element(s)`;else if(e.type==="string")s=`String must contain ${e.exact?`exactly`:e.inclusive?`at most`:`under`} ${e.maximum} character(s)`;else if(e.type==="number")s=`Number must be ${e.exact?`exactly`:e.inclusive?`less than or equal to`:`less than`} ${e.maximum}`;else if(e.type==="bigint")s=`BigInt must be ${e.exact?`exactly`:e.inclusive?`less than or equal to`:`less than`} ${e.maximum}`;else if(e.type==="date")s=`Date must be ${e.exact?`exactly`:e.inclusive?`smaller than or equal to`:`smaller than`} ${new Date(Number(e.maximum))}`;else s="Invalid input";break;case i.custom:s=`Invalid input`;break;case i.invalid_intersection_types:s=`Intersection results could not be merged`;break;case i.not_multiple_of:s=`Number must be a multiple of ${e.multipleOf}`;break;case i.not_finite:s="Number must be finite";break;default:s=t.defaultError;r.assertNever(e)}return{message:s}};const o=errorMap;let c=o;function setErrorMap(e){c=e}function getErrorMap(){return c}var d;(function(e){e.errToObj=e=>typeof e==="string"?{message:e}:e||{};e.toString=e=>typeof e==="string"?e:e?.message})(d||(d={}));const makeIssue=e=>{const{data:t,path:s,errorMaps:r,issueData:n}=e;const a=[...s,...n.path||[]];const i={...n,path:a};if(n.message!==undefined){return{...n,path:a,message:n.message}}let o="";const c=r.filter((e=>!!e)).slice().reverse();for(const e of c){o=e(i,{data:t,defaultError:o}).message}return{...n,path:a,message:o}};const u=null&&[];function addIssueToContext(e,t){const s=getErrorMap();const r=makeIssue({issueData:t,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,s,s===o?undefined:o].filter((e=>!!e))});e.common.issues.push(r)}class ParseStatus{constructor(){this.value="valid"}dirty(){if(this.value==="valid")this.value="dirty"}abort(){if(this.value!=="aborted")this.value="aborted"}static mergeArray(e,t){const s=[];for(const r of t){if(r.status==="aborted")return l;if(r.status==="dirty")e.dirty();s.push(r.value)}return{status:e.value,value:s}}static async mergeObjectAsync(e,t){const s=[];for(const e of t){const t=await e.key;const r=await e.value;s.push({key:t,value:r})}return ParseStatus.mergeObjectSync(e,s)}static mergeObjectSync(e,t){const s={};for(const r of t){const{key:t,value:n}=r;if(t.status==="aborted")return l;if(n.status==="aborted")return l;if(t.status==="dirty")e.dirty();if(n.status==="dirty")e.dirty();if(t.value!=="__proto__"&&(typeof n.value!=="undefined"||r.alwaysSet)){s[t.value]=n.value}}return{status:e.value,value:s}}}const l=Object.freeze({status:"aborted"});const DIRTY=e=>({status:"dirty",value:e});const OK=e=>({status:"valid",value:e});const isAborted=e=>e.status==="aborted";const isDirty=e=>e.status==="dirty";const isValid=e=>e.status==="valid";const isAsync=e=>typeof Promise!=="undefined"&&e instanceof Promise;class ParseInputLazyPath{constructor(e,t,s,r){this._cachedPath=[];this.parent=e;this.data=t;this._path=s;this._key=r}get path(){if(!this._cachedPath.length){if(Array.isArray(this._key)){this._cachedPath.push(...this._path,...this._key)}else{this._cachedPath.push(...this._path,this._key)}}return this._cachedPath}}const handleResult=(e,t)=>{if(isValid(t)){return{success:true,data:t.value}}else{if(!e.common.issues.length){throw new Error("Validation failed but no issues detected.")}return{success:false,get error(){if(this._error)return this._error;const t=new ZodError(e.common.issues);this._error=t;return this._error}}}};function processCreateParams(e){if(!e)return{};const{errorMap:t,invalid_type_error:s,required_error:r,description:n}=e;if(t&&(s||r)){throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`)}if(t)return{errorMap:t,description:n};const customMap=(t,n)=>{const{message:a}=e;if(t.code==="invalid_enum_value"){return{message:a??n.defaultError}}if(typeof n.data==="undefined"){return{message:a??r??n.defaultError}}if(t.code!=="invalid_type")return{message:n.defaultError};return{message:a??s??n.defaultError}};return{errorMap:customMap,description:n}}class ZodType{get description(){return this._def.description}_getType(e){return getParsedType(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:getParsedType(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new ParseStatus,ctx:{common:e.parent.common,data:e.data,parsedType:getParsedType(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const t=this._parse(e);if(isAsync(t)){throw new Error("Synchronous parse encountered promise.")}return t}_parseAsync(e){const t=this._parse(e);return Promise.resolve(t)}parse(e,t){const s=this.safeParse(e,t);if(s.success)return s.data;throw s.error}safeParse(e,t){const s={common:{issues:[],async:t?.async??false,contextualErrorMap:t?.errorMap},path:t?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:getParsedType(e)};const r=this._parseSync({data:e,path:s.path,parent:s});return handleResult(s,r)}"~validate"(e){const t={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:getParsedType(e)};if(!this["~standard"].async){try{const s=this._parseSync({data:e,path:[],parent:t});return isValid(s)?{value:s.value}:{issues:t.common.issues}}catch(e){if(e?.message?.toLowerCase()?.includes("encountered")){this["~standard"].async=true}t.common={issues:[],async:true}}}return this._parseAsync({data:e,path:[],parent:t}).then((e=>isValid(e)?{value:e.value}:{issues:t.common.issues}))}async parseAsync(e,t){const s=await this.safeParseAsync(e,t);if(s.success)return s.data;throw s.error}async safeParseAsync(e,t){const s={common:{issues:[],contextualErrorMap:t?.errorMap,async:true},path:t?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:getParsedType(e)};const r=this._parse({data:e,path:s.path,parent:s});const n=await(isAsync(r)?r:Promise.resolve(r));return handleResult(s,n)}refine(e,t){const getIssueProperties=e=>{if(typeof t==="string"||typeof t==="undefined"){return{message:t}}else if(typeof t==="function"){return t(e)}else{return t}};return this._refinement(((t,s)=>{const r=e(t);const setError=()=>s.addIssue({code:i.custom,...getIssueProperties(t)});if(typeof Promise!=="undefined"&&r instanceof Promise){return r.then((e=>{if(!e){setError();return false}else{return true}}))}if(!r){setError();return false}else{return true}}))}refinement(e,t){return this._refinement(((s,r)=>{if(!e(s)){r.addIssue(typeof t==="function"?t(s,r):t);return false}else{return true}}))}_refinement(e){return new ZodEffects({schema:this,typeName:A.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}constructor(e){this.spa=this.safeParseAsync;this._def=e;this.parse=this.parse.bind(this);this.safeParse=this.safeParse.bind(this);this.parseAsync=this.parseAsync.bind(this);this.safeParseAsync=this.safeParseAsync.bind(this);this.spa=this.spa.bind(this);this.refine=this.refine.bind(this);this.refinement=this.refinement.bind(this);this.superRefine=this.superRefine.bind(this);this.optional=this.optional.bind(this);this.nullable=this.nullable.bind(this);this.nullish=this.nullish.bind(this);this.array=this.array.bind(this);this.promise=this.promise.bind(this);this.or=this.or.bind(this);this.and=this.and.bind(this);this.transform=this.transform.bind(this);this.brand=this.brand.bind(this);this.default=this.default.bind(this);this.catch=this.catch.bind(this);this.describe=this.describe.bind(this);this.pipe=this.pipe.bind(this);this.readonly=this.readonly.bind(this);this.isNullable=this.isNullable.bind(this);this.isOptional=this.isOptional.bind(this);this["~standard"]={version:1,vendor:"zod",validate:e=>this["~validate"](e)}}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this)}promise(){return ZodPromise.create(this,this._def)}or(e){return ZodUnion.create([this,e],this._def)}and(e){return ZodIntersection.create(this,e,this._def)}transform(e){return new ZodEffects({...processCreateParams(this._def),schema:this,typeName:A.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const t=typeof e==="function"?e:()=>e;return new ZodDefault({...processCreateParams(this._def),innerType:this,defaultValue:t,typeName:A.ZodDefault})}brand(){return new ZodBranded({typeName:A.ZodBranded,type:this,...processCreateParams(this._def)})}catch(e){const t=typeof e==="function"?e:()=>e;return new ZodCatch({...processCreateParams(this._def),innerType:this,catchValue:t,typeName:A.ZodCatch})}describe(e){const t=this.constructor;return new t({...this._def,description:e})}pipe(e){return ZodPipeline.create(this,e)}readonly(){return ZodReadonly.create(this)}isOptional(){return this.safeParse(undefined).success}isNullable(){return this.safeParse(null).success}}const p=/^c[^\s-]{8,}$/i;const h=/^[0-9a-z]+$/;const m=/^[0-9A-HJKMNP-TV-Z]{26}$/i;const f=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i;const g=/^[a-z0-9_-]{21}$/i;const _=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/;const y=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/;const v=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;const b=`^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$`;let x;const S=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;const w=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/;const C=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;const Z=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;const T=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;const k=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;const R=`((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))`;const E=new RegExp(`^${R}$`);function timeRegexSource(e){let t=`[0-5]\\d`;if(e.precision){t=`${t}\\.\\d{${e.precision}}`}else if(e.precision==null){t=`${t}(\\.\\d+)?`}const s=e.precision?"+":"?";return`([01]\\d|2[0-3]):[0-5]\\d(:${t})${s}`}function timeRegex(e){return new RegExp(`^${timeRegexSource(e)}$`)}function datetimeRegex(e){let t=`${R}T${timeRegexSource(e)}`;const s=[];s.push(e.local?`Z?`:`Z`);if(e.offset)s.push(`([+-]\\d{2}:?\\d{2})`);t=`${t}(${s.join("|")})`;return new RegExp(`^${t}$`)}function isValidIP(e,t){if((t==="v4"||!t)&&S.test(e)){return true}if((t==="v6"||!t)&&C.test(e)){return true}return false}function isValidJWT(e,t){if(!_.test(e))return false;try{const[s]=e.split(".");if(!s)return false;const r=s.replace(/-/g,"+").replace(/_/g,"/").padEnd(s.length+(4-s.length%4)%4,"=");const n=JSON.parse(atob(r));if(typeof n!=="object"||n===null)return false;if("typ"in n&&n?.typ!=="JWT")return false;if(!n.alg)return false;if(t&&n.alg!==t)return false;return true}catch{return false}}function isValidCidr(e,t){if((t==="v4"||!t)&&w.test(e)){return true}if((t==="v6"||!t)&&Z.test(e)){return true}return false}class ZodString extends ZodType{_parse(e){if(this._def.coerce){e.data=String(e.data)}const t=this._getType(e);if(t!==a.string){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.string,received:t.parsedType});return l}const s=new ParseStatus;let n=undefined;for(const t of this._def.checks){if(t.kind==="min"){if(e.data.length<t.value){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.too_small,minimum:t.value,type:"string",inclusive:true,exact:false,message:t.message});s.dirty()}}else if(t.kind==="max"){if(e.data.length>t.value){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.too_big,maximum:t.value,type:"string",inclusive:true,exact:false,message:t.message});s.dirty()}}else if(t.kind==="length"){const r=e.data.length>t.value;const a=e.data.length<t.value;if(r||a){n=this._getOrReturnCtx(e,n);if(r){addIssueToContext(n,{code:i.too_big,maximum:t.value,type:"string",inclusive:true,exact:true,message:t.message})}else if(a){addIssueToContext(n,{code:i.too_small,minimum:t.value,type:"string",inclusive:true,exact:true,message:t.message})}s.dirty()}}else if(t.kind==="email"){if(!v.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"email",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="emoji"){if(!x){x=new RegExp(b,"u")}if(!x.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"emoji",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="uuid"){if(!f.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"uuid",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="nanoid"){if(!g.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"nanoid",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="cuid"){if(!p.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"cuid",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="cuid2"){if(!h.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"cuid2",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="ulid"){if(!m.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"ulid",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="url"){try{new URL(e.data)}catch{n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"url",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="regex"){t.regex.lastIndex=0;const r=t.regex.test(e.data);if(!r){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"regex",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="trim"){e.data=e.data.trim()}else if(t.kind==="includes"){if(!e.data.includes(t.value,t.position)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.invalid_string,validation:{includes:t.value,position:t.position},message:t.message});s.dirty()}}else if(t.kind==="toLowerCase"){e.data=e.data.toLowerCase()}else if(t.kind==="toUpperCase"){e.data=e.data.toUpperCase()}else if(t.kind==="startsWith"){if(!e.data.startsWith(t.value)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.invalid_string,validation:{startsWith:t.value},message:t.message});s.dirty()}}else if(t.kind==="endsWith"){if(!e.data.endsWith(t.value)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.invalid_string,validation:{endsWith:t.value},message:t.message});s.dirty()}}else if(t.kind==="datetime"){const r=datetimeRegex(t);if(!r.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.invalid_string,validation:"datetime",message:t.message});s.dirty()}}else if(t.kind==="date"){const r=E;if(!r.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.invalid_string,validation:"date",message:t.message});s.dirty()}}else if(t.kind==="time"){const r=timeRegex(t);if(!r.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.invalid_string,validation:"time",message:t.message});s.dirty()}}else if(t.kind==="duration"){if(!y.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"duration",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="ip"){if(!isValidIP(e.data,t.version)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"ip",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="jwt"){if(!isValidJWT(e.data,t.alg)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"jwt",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="cidr"){if(!isValidCidr(e.data,t.version)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"cidr",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="base64"){if(!T.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"base64",code:i.invalid_string,message:t.message});s.dirty()}}else if(t.kind==="base64url"){if(!k.test(e.data)){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{validation:"base64url",code:i.invalid_string,message:t.message});s.dirty()}}else{r.assertNever(t)}}return{status:s.value,value:e.data}}_regex(e,t,s){return this.refinement((t=>e.test(t)),{validation:t,code:i.invalid_string,...d.errToObj(s)})}_addCheck(e){return new ZodString({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...d.errToObj(e)})}url(e){return this._addCheck({kind:"url",...d.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...d.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...d.errToObj(e)})}nanoid(e){return this._addCheck({kind:"nanoid",...d.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...d.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...d.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...d.errToObj(e)})}base64(e){return this._addCheck({kind:"base64",...d.errToObj(e)})}base64url(e){return this._addCheck({kind:"base64url",...d.errToObj(e)})}jwt(e){return this._addCheck({kind:"jwt",...d.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...d.errToObj(e)})}cidr(e){return this._addCheck({kind:"cidr",...d.errToObj(e)})}datetime(e){if(typeof e==="string"){return this._addCheck({kind:"datetime",precision:null,offset:false,local:false,message:e})}return this._addCheck({kind:"datetime",precision:typeof e?.precision==="undefined"?null:e?.precision,offset:e?.offset??false,local:e?.local??false,...d.errToObj(e?.message)})}date(e){return this._addCheck({kind:"date",message:e})}time(e){if(typeof e==="string"){return this._addCheck({kind:"time",precision:null,message:e})}return this._addCheck({kind:"time",precision:typeof e?.precision==="undefined"?null:e?.precision,...d.errToObj(e?.message)})}duration(e){return this._addCheck({kind:"duration",...d.errToObj(e)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...d.errToObj(t)})}includes(e,t){return this._addCheck({kind:"includes",value:e,position:t?.position,...d.errToObj(t?.message)})}startsWith(e,t){return this._addCheck({kind:"startsWith",value:e,...d.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:"endsWith",value:e,...d.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...d.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...d.errToObj(t)})}length(e,t){return this._addCheck({kind:"length",value:e,...d.errToObj(t)})}nonempty(e){return this.min(1,d.errToObj(e))}trim(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find((e=>e.kind==="datetime"))}get isDate(){return!!this._def.checks.find((e=>e.kind==="date"))}get isTime(){return!!this._def.checks.find((e=>e.kind==="time"))}get isDuration(){return!!this._def.checks.find((e=>e.kind==="duration"))}get isEmail(){return!!this._def.checks.find((e=>e.kind==="email"))}get isURL(){return!!this._def.checks.find((e=>e.kind==="url"))}get isEmoji(){return!!this._def.checks.find((e=>e.kind==="emoji"))}get isUUID(){return!!this._def.checks.find((e=>e.kind==="uuid"))}get isNANOID(){return!!this._def.checks.find((e=>e.kind==="nanoid"))}get isCUID(){return!!this._def.checks.find((e=>e.kind==="cuid"))}get isCUID2(){return!!this._def.checks.find((e=>e.kind==="cuid2"))}get isULID(){return!!this._def.checks.find((e=>e.kind==="ulid"))}get isIP(){return!!this._def.checks.find((e=>e.kind==="ip"))}get isCIDR(){return!!this._def.checks.find((e=>e.kind==="cidr"))}get isBase64(){return!!this._def.checks.find((e=>e.kind==="base64"))}get isBase64url(){return!!this._def.checks.find((e=>e.kind==="base64url"))}get minLength(){let e=null;for(const t of this._def.checks){if(t.kind==="min"){if(e===null||t.value>e)e=t.value}}return e}get maxLength(){let e=null;for(const t of this._def.checks){if(t.kind==="max"){if(e===null||t.value<e)e=t.value}}return e}}ZodString.create=e=>new ZodString({checks:[],typeName:A.ZodString,coerce:e?.coerce??false,...processCreateParams(e)});function floatSafeRemainder(e,t){const s=(e.toString().split(".")[1]||"").length;const r=(t.toString().split(".")[1]||"").length;const n=s>r?s:r;const a=Number.parseInt(e.toFixed(n).replace(".",""));const i=Number.parseInt(t.toFixed(n).replace(".",""));return a%i/10**n}class ZodNumber extends ZodType{constructor(){super(...arguments);this.min=this.gte;this.max=this.lte;this.step=this.multipleOf}_parse(e){if(this._def.coerce){e.data=Number(e.data)}const t=this._getType(e);if(t!==a.number){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.number,received:t.parsedType});return l}let s=undefined;const n=new ParseStatus;for(const t of this._def.checks){if(t.kind==="int"){if(!r.isInteger(e.data)){s=this._getOrReturnCtx(e,s);addIssueToContext(s,{code:i.invalid_type,expected:"integer",received:"float",message:t.message});n.dirty()}}else if(t.kind==="min"){const r=t.inclusive?e.data<t.value:e.data<=t.value;if(r){s=this._getOrReturnCtx(e,s);addIssueToContext(s,{code:i.too_small,minimum:t.value,type:"number",inclusive:t.inclusive,exact:false,message:t.message});n.dirty()}}else if(t.kind==="max"){const r=t.inclusive?e.data>t.value:e.data>=t.value;if(r){s=this._getOrReturnCtx(e,s);addIssueToContext(s,{code:i.too_big,maximum:t.value,type:"number",inclusive:t.inclusive,exact:false,message:t.message});n.dirty()}}else if(t.kind==="multipleOf"){if(floatSafeRemainder(e.data,t.value)!==0){s=this._getOrReturnCtx(e,s);addIssueToContext(s,{code:i.not_multiple_of,multipleOf:t.value,message:t.message});n.dirty()}}else if(t.kind==="finite"){if(!Number.isFinite(e.data)){s=this._getOrReturnCtx(e,s);addIssueToContext(s,{code:i.not_finite,message:t.message});n.dirty()}}else{r.assertNever(t)}}return{status:n.value,value:e.data}}gte(e,t){return this.setLimit("min",e,true,d.toString(t))}gt(e,t){return this.setLimit("min",e,false,d.toString(t))}lte(e,t){return this.setLimit("max",e,true,d.toString(t))}lt(e,t){return this.setLimit("max",e,false,d.toString(t))}setLimit(e,t,s,r){return new ZodNumber({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:s,message:d.toString(r)}]})}_addCheck(e){return new ZodNumber({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:d.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:false,message:d.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:false,message:d.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:true,message:d.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:true,message:d.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:d.toString(t)})}finite(e){return this._addCheck({kind:"finite",message:d.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:true,value:Number.MIN_SAFE_INTEGER,message:d.toString(e)})._addCheck({kind:"max",inclusive:true,value:Number.MAX_SAFE_INTEGER,message:d.toString(e)})}get minValue(){let e=null;for(const t of this._def.checks){if(t.kind==="min"){if(e===null||t.value>e)e=t.value}}return e}get maxValue(){let e=null;for(const t of this._def.checks){if(t.kind==="max"){if(e===null||t.value<e)e=t.value}}return e}get isInt(){return!!this._def.checks.find((e=>e.kind==="int"||e.kind==="multipleOf"&&r.isInteger(e.value)))}get isFinite(){let e=null;let t=null;for(const s of this._def.checks){if(s.kind==="finite"||s.kind==="int"||s.kind==="multipleOf"){return true}else if(s.kind==="min"){if(t===null||s.value>t)t=s.value}else if(s.kind==="max"){if(e===null||s.value<e)e=s.value}}return Number.isFinite(t)&&Number.isFinite(e)}}ZodNumber.create=e=>new ZodNumber({checks:[],typeName:A.ZodNumber,coerce:e?.coerce||false,...processCreateParams(e)});class ZodBigInt extends ZodType{constructor(){super(...arguments);this.min=this.gte;this.max=this.lte}_parse(e){if(this._def.coerce){try{e.data=BigInt(e.data)}catch{return this._getInvalidInput(e)}}const t=this._getType(e);if(t!==a.bigint){return this._getInvalidInput(e)}let s=undefined;const n=new ParseStatus;for(const t of this._def.checks){if(t.kind==="min"){const r=t.inclusive?e.data<t.value:e.data<=t.value;if(r){s=this._getOrReturnCtx(e,s);addIssueToContext(s,{code:i.too_small,type:"bigint",minimum:t.value,inclusive:t.inclusive,message:t.message});n.dirty()}}else if(t.kind==="max"){const r=t.inclusive?e.data>t.value:e.data>=t.value;if(r){s=this._getOrReturnCtx(e,s);addIssueToContext(s,{code:i.too_big,type:"bigint",maximum:t.value,inclusive:t.inclusive,message:t.message});n.dirty()}}else if(t.kind==="multipleOf"){if(e.data%t.value!==BigInt(0)){s=this._getOrReturnCtx(e,s);addIssueToContext(s,{code:i.not_multiple_of,multipleOf:t.value,message:t.message});n.dirty()}}else{r.assertNever(t)}}return{status:n.value,value:e.data}}_getInvalidInput(e){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.bigint,received:t.parsedType});return l}gte(e,t){return this.setLimit("min",e,true,d.toString(t))}gt(e,t){return this.setLimit("min",e,false,d.toString(t))}lte(e,t){return this.setLimit("max",e,true,d.toString(t))}lt(e,t){return this.setLimit("max",e,false,d.toString(t))}setLimit(e,t,s,r){return new ZodBigInt({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:s,message:d.toString(r)}]})}_addCheck(e){return new ZodBigInt({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:false,message:d.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:false,message:d.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:true,message:d.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:true,message:d.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:d.toString(t)})}get minValue(){let e=null;for(const t of this._def.checks){if(t.kind==="min"){if(e===null||t.value>e)e=t.value}}return e}get maxValue(){let e=null;for(const t of this._def.checks){if(t.kind==="max"){if(e===null||t.value<e)e=t.value}}return e}}ZodBigInt.create=e=>new ZodBigInt({checks:[],typeName:A.ZodBigInt,coerce:e?.coerce??false,...processCreateParams(e)});class ZodBoolean extends ZodType{_parse(e){if(this._def.coerce){e.data=Boolean(e.data)}const t=this._getType(e);if(t!==a.boolean){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.boolean,received:t.parsedType});return l}return OK(e.data)}}ZodBoolean.create=e=>new ZodBoolean({typeName:A.ZodBoolean,coerce:e?.coerce||false,...processCreateParams(e)});class ZodDate extends ZodType{_parse(e){if(this._def.coerce){e.data=new Date(e.data)}const t=this._getType(e);if(t!==a.date){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.date,received:t.parsedType});return l}if(Number.isNaN(e.data.getTime())){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_date});return l}const s=new ParseStatus;let n=undefined;for(const t of this._def.checks){if(t.kind==="min"){if(e.data.getTime()<t.value){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.too_small,message:t.message,inclusive:true,exact:false,minimum:t.value,type:"date"});s.dirty()}}else if(t.kind==="max"){if(e.data.getTime()>t.value){n=this._getOrReturnCtx(e,n);addIssueToContext(n,{code:i.too_big,message:t.message,inclusive:true,exact:false,maximum:t.value,type:"date"});s.dirty()}}else{r.assertNever(t)}}return{status:s.value,value:new Date(e.data.getTime())}}_addCheck(e){return new ZodDate({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:"min",value:e.getTime(),message:d.toString(t)})}max(e,t){return this._addCheck({kind:"max",value:e.getTime(),message:d.toString(t)})}get minDate(){let e=null;for(const t of this._def.checks){if(t.kind==="min"){if(e===null||t.value>e)e=t.value}}return e!=null?new Date(e):null}get maxDate(){let e=null;for(const t of this._def.checks){if(t.kind==="max"){if(e===null||t.value<e)e=t.value}}return e!=null?new Date(e):null}}ZodDate.create=e=>new ZodDate({checks:[],coerce:e?.coerce||false,typeName:A.ZodDate,...processCreateParams(e)});class ZodSymbol extends ZodType{_parse(e){const t=this._getType(e);if(t!==a.symbol){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.symbol,received:t.parsedType});return l}return OK(e.data)}}ZodSymbol.create=e=>new ZodSymbol({typeName:A.ZodSymbol,...processCreateParams(e)});class ZodUndefined extends ZodType{_parse(e){const t=this._getType(e);if(t!==a.undefined){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.undefined,received:t.parsedType});return l}return OK(e.data)}}ZodUndefined.create=e=>new ZodUndefined({typeName:A.ZodUndefined,...processCreateParams(e)});class ZodNull extends ZodType{_parse(e){const t=this._getType(e);if(t!==a.null){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.null,received:t.parsedType});return l}return OK(e.data)}}ZodNull.create=e=>new ZodNull({typeName:A.ZodNull,...processCreateParams(e)});class ZodAny extends ZodType{constructor(){super(...arguments);this._any=true}_parse(e){return OK(e.data)}}ZodAny.create=e=>new ZodAny({typeName:A.ZodAny,...processCreateParams(e)});class ZodUnknown extends ZodType{constructor(){super(...arguments);this._unknown=true}_parse(e){return OK(e.data)}}ZodUnknown.create=e=>new ZodUnknown({typeName:A.ZodUnknown,...processCreateParams(e)});class ZodNever extends ZodType{_parse(e){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.never,received:t.parsedType});return l}}ZodNever.create=e=>new ZodNever({typeName:A.ZodNever,...processCreateParams(e)});class ZodVoid extends ZodType{_parse(e){const t=this._getType(e);if(t!==a.undefined){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.void,received:t.parsedType});return l}return OK(e.data)}}ZodVoid.create=e=>new ZodVoid({typeName:A.ZodVoid,...processCreateParams(e)});class ZodArray extends ZodType{_parse(e){const{ctx:t,status:s}=this._processInputParams(e);const r=this._def;if(t.parsedType!==a.array){addIssueToContext(t,{code:i.invalid_type,expected:a.array,received:t.parsedType});return l}if(r.exactLength!==null){const e=t.data.length>r.exactLength.value;const n=t.data.length<r.exactLength.value;if(e||n){addIssueToContext(t,{code:e?i.too_big:i.too_small,minimum:n?r.exactLength.value:undefined,maximum:e?r.exactLength.value:undefined,type:"array",inclusive:true,exact:true,message:r.exactLength.message});s.dirty()}}if(r.minLength!==null){if(t.data.length<r.minLength.value){addIssueToContext(t,{code:i.too_small,minimum:r.minLength.value,type:"array",inclusive:true,exact:false,message:r.minLength.message});s.dirty()}}if(r.maxLength!==null){if(t.data.length>r.maxLength.value){addIssueToContext(t,{code:i.too_big,maximum:r.maxLength.value,type:"array",inclusive:true,exact:false,message:r.maxLength.message});s.dirty()}}if(t.common.async){return Promise.all([...t.data].map(((e,s)=>r.type._parseAsync(new ParseInputLazyPath(t,e,t.path,s))))).then((e=>ParseStatus.mergeArray(s,e)))}const n=[...t.data].map(((e,s)=>r.type._parseSync(new ParseInputLazyPath(t,e,t.path,s))));return ParseStatus.mergeArray(s,n)}get element(){return this._def.type}min(e,t){return new ZodArray({...this._def,minLength:{value:e,message:d.toString(t)}})}max(e,t){return new ZodArray({...this._def,maxLength:{value:e,message:d.toString(t)}})}length(e,t){return new ZodArray({...this._def,exactLength:{value:e,message:d.toString(t)}})}nonempty(e){return this.min(1,e)}}ZodArray.create=(e,t)=>new ZodArray({type:e,minLength:null,maxLength:null,exactLength:null,typeName:A.ZodArray,...processCreateParams(t)});function deepPartialify(e){if(e instanceof ZodObject){const t={};for(const s in e.shape){const r=e.shape[s];t[s]=ZodOptional.create(deepPartialify(r))}return new ZodObject({...e._def,shape:()=>t})}else if(e instanceof ZodArray){return new ZodArray({...e._def,type:deepPartialify(e.element)})}else if(e instanceof ZodOptional){return ZodOptional.create(deepPartialify(e.unwrap()))}else if(e instanceof ZodNullable){return ZodNullable.create(deepPartialify(e.unwrap()))}else if(e instanceof ZodTuple){return ZodTuple.create(e.items.map((e=>deepPartialify(e))))}else{return e}}class ZodObject extends ZodType{constructor(){super(...arguments);this._cached=null;this.nonstrict=this.passthrough;this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const e=this._def.shape();const t=r.objectKeys(e);this._cached={shape:e,keys:t};return this._cached}_parse(e){const t=this._getType(e);if(t!==a.object){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.object,received:t.parsedType});return l}const{status:s,ctx:r}=this._processInputParams(e);const{shape:n,keys:o}=this._getCached();const c=[];if(!(this._def.catchall instanceof ZodNever&&this._def.unknownKeys==="strip")){for(const e in r.data){if(!o.includes(e)){c.push(e)}}}const d=[];for(const e of o){const t=n[e];const s=r.data[e];d.push({key:{status:"valid",value:e},value:t._parse(new ParseInputLazyPath(r,s,r.path,e)),alwaysSet:e in r.data})}if(this._def.catchall instanceof ZodNever){const e=this._def.unknownKeys;if(e==="passthrough"){for(const e of c){d.push({key:{status:"valid",value:e},value:{status:"valid",value:r.data[e]}})}}else if(e==="strict"){if(c.length>0){addIssueToContext(r,{code:i.unrecognized_keys,keys:c});s.dirty()}}else if(e==="strip"){}else{throw new Error(`Internal ZodObject error: invalid unknownKeys value.`)}}else{const e=this._def.catchall;for(const t of c){const s=r.data[t];d.push({key:{status:"valid",value:t},value:e._parse(new ParseInputLazyPath(r,s,r.path,t)),alwaysSet:t in r.data})}}if(r.common.async){return Promise.resolve().then((async()=>{const e=[];for(const t of d){const s=await t.key;const r=await t.value;e.push({key:s,value:r,alwaysSet:t.alwaysSet})}return e})).then((e=>ParseStatus.mergeObjectSync(s,e)))}else{return ParseStatus.mergeObjectSync(s,d)}}get shape(){return this._def.shape()}strict(e){d.errToObj;return new ZodObject({...this._def,unknownKeys:"strict",...e!==undefined?{errorMap:(t,s)=>{const r=this._def.errorMap?.(t,s).message??s.defaultError;if(t.code==="unrecognized_keys")return{message:d.errToObj(e).message??r};return{message:r}}}:{}})}strip(){return new ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new ZodObject({...this._def,unknownKeys:"passthrough"})}extend(e){return new ZodObject({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){const t=new ZodObject({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:A.ZodObject});return t}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new ZodObject({...this._def,catchall:e})}pick(e){const t={};for(const s of r.objectKeys(e)){if(e[s]&&this.shape[s]){t[s]=this.shape[s]}}return new ZodObject({...this._def,shape:()=>t})}omit(e){const t={};for(const s of r.objectKeys(this.shape)){if(!e[s]){t[s]=this.shape[s]}}return new ZodObject({...this._def,shape:()=>t})}deepPartial(){return deepPartialify(this)}partial(e){const t={};for(const s of r.objectKeys(this.shape)){const r=this.shape[s];if(e&&!e[s]){t[s]=r}else{t[s]=r.optional()}}return new ZodObject({...this._def,shape:()=>t})}required(e){const t={};for(const s of r.objectKeys(this.shape)){if(e&&!e[s]){t[s]=this.shape[s]}else{const e=this.shape[s];let r=e;while(r instanceof ZodOptional){r=r._def.innerType}t[s]=r}}return new ZodObject({...this._def,shape:()=>t})}keyof(){return createZodEnum(r.objectKeys(this.shape))}}ZodObject.create=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:A.ZodObject,...processCreateParams(t)});ZodObject.strictCreate=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strict",catchall:ZodNever.create(),typeName:A.ZodObject,...processCreateParams(t)});ZodObject.lazycreate=(e,t)=>new ZodObject({shape:e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:A.ZodObject,...processCreateParams(t)});class ZodUnion extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);const s=this._def.options;function handleResults(e){for(const t of e){if(t.result.status==="valid"){return t.result}}for(const s of e){if(s.result.status==="dirty"){t.common.issues.push(...s.ctx.common.issues);return s.result}}const s=e.map((e=>new ZodError(e.ctx.common.issues)));addIssueToContext(t,{code:i.invalid_union,unionErrors:s});return l}if(t.common.async){return Promise.all(s.map((async e=>{const s={...t,common:{...t.common,issues:[]},parent:null};return{result:await e._parseAsync({data:t.data,path:t.path,parent:s}),ctx:s}}))).then(handleResults)}else{let e=undefined;const r=[];for(const n of s){const s={...t,common:{...t.common,issues:[]},parent:null};const a=n._parseSync({data:t.data,path:t.path,parent:s});if(a.status==="valid"){return a}else if(a.status==="dirty"&&!e){e={result:a,ctx:s}}if(s.common.issues.length){r.push(s.common.issues)}}if(e){t.common.issues.push(...e.ctx.common.issues);return e.result}const n=r.map((e=>new ZodError(e)));addIssueToContext(t,{code:i.invalid_union,unionErrors:n});return l}}get options(){return this._def.options}}ZodUnion.create=(e,t)=>new ZodUnion({options:e,typeName:A.ZodUnion,...processCreateParams(t)});const getDiscriminator=e=>{if(e instanceof ZodLazy){return getDiscriminator(e.schema)}else if(e instanceof ZodEffects){return getDiscriminator(e.innerType())}else if(e instanceof ZodLiteral){return[e.value]}else if(e instanceof ZodEnum){return e.options}else if(e instanceof ZodNativeEnum){return r.objectValues(e.enum)}else if(e instanceof ZodDefault){return getDiscriminator(e._def.innerType)}else if(e instanceof ZodUndefined){return[undefined]}else if(e instanceof ZodNull){return[null]}else if(e instanceof ZodOptional){return[undefined,...getDiscriminator(e.unwrap())]}else if(e instanceof ZodNullable){return[null,...getDiscriminator(e.unwrap())]}else if(e instanceof ZodBranded){return getDiscriminator(e.unwrap())}else if(e instanceof ZodReadonly){return getDiscriminator(e.unwrap())}else if(e instanceof ZodCatch){return getDiscriminator(e._def.innerType)}else{return[]}};class ZodDiscriminatedUnion extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==a.object){addIssueToContext(t,{code:i.invalid_type,expected:a.object,received:t.parsedType});return l}const s=this.discriminator;const r=t.data[s];const n=this.optionsMap.get(r);if(!n){addIssueToContext(t,{code:i.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[s]});return l}if(t.common.async){return n._parseAsync({data:t.data,path:t.path,parent:t})}else{return n._parseSync({data:t.data,path:t.path,parent:t})}}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,s){const r=new Map;for(const s of t){const t=getDiscriminator(s.shape[e]);if(!t.length){throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`)}for(const n of t){if(r.has(n)){throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(n)}`)}r.set(n,s)}}return new ZodDiscriminatedUnion({typeName:A.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:r,...processCreateParams(s)})}}function mergeValues(e,t){const s=getParsedType(e);const n=getParsedType(t);if(e===t){return{valid:true,data:e}}else if(s===a.object&&n===a.object){const s=r.objectKeys(t);const n=r.objectKeys(e).filter((e=>s.indexOf(e)!==-1));const a={...e,...t};for(const s of n){const r=mergeValues(e[s],t[s]);if(!r.valid){return{valid:false}}a[s]=r.data}return{valid:true,data:a}}else if(s===a.array&&n===a.array){if(e.length!==t.length){return{valid:false}}const s=[];for(let r=0;r<e.length;r++){const n=e[r];const a=t[r];const i=mergeValues(n,a);if(!i.valid){return{valid:false}}s.push(i.data)}return{valid:true,data:s}}else if(s===a.date&&n===a.date&&+e===+t){return{valid:true,data:e}}else{return{valid:false}}}class ZodIntersection extends ZodType{_parse(e){const{status:t,ctx:s}=this._processInputParams(e);const handleParsed=(e,r)=>{if(isAborted(e)||isAborted(r)){return l}const n=mergeValues(e.value,r.value);if(!n.valid){addIssueToContext(s,{code:i.invalid_intersection_types});return l}if(isDirty(e)||isDirty(r)){t.dirty()}return{status:t.value,value:n.data}};if(s.common.async){return Promise.all([this._def.left._parseAsync({data:s.data,path:s.path,parent:s}),this._def.right._parseAsync({data:s.data,path:s.path,parent:s})]).then((([e,t])=>handleParsed(e,t)))}else{return handleParsed(this._def.left._parseSync({data:s.data,path:s.path,parent:s}),this._def.right._parseSync({data:s.data,path:s.path,parent:s}))}}}ZodIntersection.create=(e,t,s)=>new ZodIntersection({left:e,right:t,typeName:A.ZodIntersection,...processCreateParams(s)});class ZodTuple extends ZodType{_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.parsedType!==a.array){addIssueToContext(s,{code:i.invalid_type,expected:a.array,received:s.parsedType});return l}if(s.data.length<this._def.items.length){addIssueToContext(s,{code:i.too_small,minimum:this._def.items.length,inclusive:true,exact:false,type:"array"});return l}const r=this._def.rest;if(!r&&s.data.length>this._def.items.length){addIssueToContext(s,{code:i.too_big,maximum:this._def.items.length,inclusive:true,exact:false,type:"array"});t.dirty()}const n=[...s.data].map(((e,t)=>{const r=this._def.items[t]||this._def.rest;if(!r)return null;return r._parse(new ParseInputLazyPath(s,e,s.path,t))})).filter((e=>!!e));if(s.common.async){return Promise.all(n).then((e=>ParseStatus.mergeArray(t,e)))}else{return ParseStatus.mergeArray(t,n)}}get items(){return this._def.items}rest(e){return new ZodTuple({...this._def,rest:e})}}ZodTuple.create=(e,t)=>{if(!Array.isArray(e)){throw new Error("You must pass an array of schemas to z.tuple([ ... ])")}return new ZodTuple({items:e,typeName:A.ZodTuple,rest:null,...processCreateParams(t)})};class ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.parsedType!==a.object){addIssueToContext(s,{code:i.invalid_type,expected:a.object,received:s.parsedType});return l}const r=[];const n=this._def.keyType;const o=this._def.valueType;for(const e in s.data){r.push({key:n._parse(new ParseInputLazyPath(s,e,s.path,e)),value:o._parse(new ParseInputLazyPath(s,s.data[e],s.path,e)),alwaysSet:e in s.data})}if(s.common.async){return ParseStatus.mergeObjectAsync(t,r)}else{return ParseStatus.mergeObjectSync(t,r)}}get element(){return this._def.valueType}static create(e,t,s){if(t instanceof ZodType){return new ZodRecord({keyType:e,valueType:t,typeName:A.ZodRecord,...processCreateParams(s)})}return new ZodRecord({keyType:ZodString.create(),valueType:e,typeName:A.ZodRecord,...processCreateParams(t)})}}class ZodMap extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.parsedType!==a.map){addIssueToContext(s,{code:i.invalid_type,expected:a.map,received:s.parsedType});return l}const r=this._def.keyType;const n=this._def.valueType;const o=[...s.data.entries()].map((([e,t],a)=>({key:r._parse(new ParseInputLazyPath(s,e,s.path,[a,"key"])),value:n._parse(new ParseInputLazyPath(s,t,s.path,[a,"value"]))})));if(s.common.async){const e=new Map;return Promise.resolve().then((async()=>{for(const s of o){const r=await s.key;const n=await s.value;if(r.status==="aborted"||n.status==="aborted"){return l}if(r.status==="dirty"||n.status==="dirty"){t.dirty()}e.set(r.value,n.value)}return{status:t.value,value:e}}))}else{const e=new Map;for(const s of o){const r=s.key;const n=s.value;if(r.status==="aborted"||n.status==="aborted"){return l}if(r.status==="dirty"||n.status==="dirty"){t.dirty()}e.set(r.value,n.value)}return{status:t.value,value:e}}}}ZodMap.create=(e,t,s)=>new ZodMap({valueType:t,keyType:e,typeName:A.ZodMap,...processCreateParams(s)});class ZodSet extends ZodType{_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.parsedType!==a.set){addIssueToContext(s,{code:i.invalid_type,expected:a.set,received:s.parsedType});return l}const r=this._def;if(r.minSize!==null){if(s.data.size<r.minSize.value){addIssueToContext(s,{code:i.too_small,minimum:r.minSize.value,type:"set",inclusive:true,exact:false,message:r.minSize.message});t.dirty()}}if(r.maxSize!==null){if(s.data.size>r.maxSize.value){addIssueToContext(s,{code:i.too_big,maximum:r.maxSize.value,type:"set",inclusive:true,exact:false,message:r.maxSize.message});t.dirty()}}const n=this._def.valueType;function finalizeSet(e){const s=new Set;for(const r of e){if(r.status==="aborted")return l;if(r.status==="dirty")t.dirty();s.add(r.value)}return{status:t.value,value:s}}const o=[...s.data.values()].map(((e,t)=>n._parse(new ParseInputLazyPath(s,e,s.path,t))));if(s.common.async){return Promise.all(o).then((e=>finalizeSet(e)))}else{return finalizeSet(o)}}min(e,t){return new ZodSet({...this._def,minSize:{value:e,message:d.toString(t)}})}max(e,t){return new ZodSet({...this._def,maxSize:{value:e,message:d.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}ZodSet.create=(e,t)=>new ZodSet({valueType:e,minSize:null,maxSize:null,typeName:A.ZodSet,...processCreateParams(t)});class ZodFunction extends ZodType{constructor(){super(...arguments);this.validate=this.implement}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==a.function){addIssueToContext(t,{code:i.invalid_type,expected:a.function,received:t.parsedType});return l}function makeArgsIssue(e,s){return makeIssue({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,getErrorMap(),o].filter((e=>!!e)),issueData:{code:i.invalid_arguments,argumentsError:s}})}function makeReturnsIssue(e,s){return makeIssue({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,getErrorMap(),o].filter((e=>!!e)),issueData:{code:i.invalid_return_type,returnTypeError:s}})}const s={errorMap:t.common.contextualErrorMap};const r=t.data;if(this._def.returns instanceof ZodPromise){const e=this;return OK((async function(...t){const n=new ZodError([]);const a=await e._def.args.parseAsync(t,s).catch((e=>{n.addIssue(makeArgsIssue(t,e));throw n}));const i=await Reflect.apply(r,this,a);const o=await e._def.returns._def.type.parseAsync(i,s).catch((e=>{n.addIssue(makeReturnsIssue(i,e));throw n}));return o}))}else{const e=this;return OK((function(...t){const n=e._def.args.safeParse(t,s);if(!n.success){throw new ZodError([makeArgsIssue(t,n.error)])}const a=Reflect.apply(r,this,n.data);const i=e._def.returns.safeParse(a,s);if(!i.success){throw new ZodError([makeReturnsIssue(a,i.error)])}return i.data}))}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new ZodFunction({...this._def,args:ZodTuple.create(e).rest(ZodUnknown.create())})}returns(e){return new ZodFunction({...this._def,returns:e})}implement(e){const t=this.parse(e);return t}strictImplement(e){const t=this.parse(e);return t}static create(e,t,s){return new ZodFunction({args:e?e:ZodTuple.create([]).rest(ZodUnknown.create()),returns:t||ZodUnknown.create(),typeName:A.ZodFunction,...processCreateParams(s)})}}class ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(e){const{ctx:t}=this._processInputParams(e);const s=this._def.getter();return s._parse({data:t.data,path:t.path,parent:t})}}ZodLazy.create=(e,t)=>new ZodLazy({getter:e,typeName:A.ZodLazy,...processCreateParams(t)});class ZodLiteral extends ZodType{_parse(e){if(e.data!==this._def.value){const t=this._getOrReturnCtx(e);addIssueToContext(t,{received:t.data,code:i.invalid_literal,expected:this._def.value});return l}return{status:"valid",value:e.data}}get value(){return this._def.value}}ZodLiteral.create=(e,t)=>new ZodLiteral({value:e,typeName:A.ZodLiteral,...processCreateParams(t)});function createZodEnum(e,t){return new ZodEnum({values:e,typeName:A.ZodEnum,...processCreateParams(t)})}class ZodEnum extends ZodType{_parse(e){if(typeof e.data!=="string"){const t=this._getOrReturnCtx(e);const s=this._def.values;addIssueToContext(t,{expected:r.joinValues(s),received:t.parsedType,code:i.invalid_type});return l}if(!this._cache){this._cache=new Set(this._def.values)}if(!this._cache.has(e.data)){const t=this._getOrReturnCtx(e);const s=this._def.values;addIssueToContext(t,{received:t.data,code:i.invalid_enum_value,options:s});return l}return OK(e.data)}get options(){return this._def.values}get enum(){const e={};for(const t of this._def.values){e[t]=t}return e}get Values(){const e={};for(const t of this._def.values){e[t]=t}return e}get Enum(){const e={};for(const t of this._def.values){e[t]=t}return e}extract(e,t=this._def){return ZodEnum.create(e,{...this._def,...t})}exclude(e,t=this._def){return ZodEnum.create(this.options.filter((t=>!e.includes(t))),{...this._def,...t})}}ZodEnum.create=createZodEnum;class ZodNativeEnum extends ZodType{_parse(e){const t=r.getValidEnumValues(this._def.values);const s=this._getOrReturnCtx(e);if(s.parsedType!==a.string&&s.parsedType!==a.number){const e=r.objectValues(t);addIssueToContext(s,{expected:r.joinValues(e),received:s.parsedType,code:i.invalid_type});return l}if(!this._cache){this._cache=new Set(r.getValidEnumValues(this._def.values))}if(!this._cache.has(e.data)){const e=r.objectValues(t);addIssueToContext(s,{received:s.data,code:i.invalid_enum_value,options:e});return l}return OK(e.data)}get enum(){return this._def.values}}ZodNativeEnum.create=(e,t)=>new ZodNativeEnum({values:e,typeName:A.ZodNativeEnum,...processCreateParams(t)});class ZodPromise extends ZodType{unwrap(){return this._def.type}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==a.promise&&t.common.async===false){addIssueToContext(t,{code:i.invalid_type,expected:a.promise,received:t.parsedType});return l}const s=t.parsedType===a.promise?t.data:Promise.resolve(t.data);return OK(s.then((e=>this._def.type.parseAsync(e,{path:t.path,errorMap:t.common.contextualErrorMap}))))}}ZodPromise.create=(e,t)=>new ZodPromise({type:e,typeName:A.ZodPromise,...processCreateParams(t)});class ZodEffects extends ZodType{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===A.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:t,ctx:s}=this._processInputParams(e);const n=this._def.effect||null;const a={addIssue:e=>{addIssueToContext(s,e);if(e.fatal){t.abort()}else{t.dirty()}},get path(){return s.path}};a.addIssue=a.addIssue.bind(a);if(n.type==="preprocess"){const e=n.transform(s.data,a);if(s.common.async){return Promise.resolve(e).then((async e=>{if(t.value==="aborted")return l;const r=await this._def.schema._parseAsync({data:e,path:s.path,parent:s});if(r.status==="aborted")return l;if(r.status==="dirty")return DIRTY(r.value);if(t.value==="dirty")return DIRTY(r.value);return r}))}else{if(t.value==="aborted")return l;const r=this._def.schema._parseSync({data:e,path:s.path,parent:s});if(r.status==="aborted")return l;if(r.status==="dirty")return DIRTY(r.value);if(t.value==="dirty")return DIRTY(r.value);return r}}if(n.type==="refinement"){const executeRefinement=e=>{const t=n.refinement(e,a);if(s.common.async){return Promise.resolve(t)}if(t instanceof Promise){throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.")}return e};if(s.common.async===false){const e=this._def.schema._parseSync({data:s.data,path:s.path,parent:s});if(e.status==="aborted")return l;if(e.status==="dirty")t.dirty();executeRefinement(e.value);return{status:t.value,value:e.value}}else{return this._def.schema._parseAsync({data:s.data,path:s.path,parent:s}).then((e=>{if(e.status==="aborted")return l;if(e.status==="dirty")t.dirty();return executeRefinement(e.value).then((()=>({status:t.value,value:e.value})))}))}}if(n.type==="transform"){if(s.common.async===false){const e=this._def.schema._parseSync({data:s.data,path:s.path,parent:s});if(!isValid(e))return l;const r=n.transform(e.value,a);if(r instanceof Promise){throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`)}return{status:t.value,value:r}}else{return this._def.schema._parseAsync({data:s.data,path:s.path,parent:s}).then((e=>{if(!isValid(e))return l;return Promise.resolve(n.transform(e.value,a)).then((e=>({status:t.value,value:e})))}))}}r.assertNever(n)}}ZodEffects.create=(e,t,s)=>new ZodEffects({schema:e,typeName:A.ZodEffects,effect:t,...processCreateParams(s)});ZodEffects.createWithPreprocess=(e,t,s)=>new ZodEffects({schema:t,effect:{type:"preprocess",transform:e},typeName:A.ZodEffects,...processCreateParams(s)});class ZodOptional extends ZodType{_parse(e){const t=this._getType(e);if(t===a.undefined){return OK(undefined)}return this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}ZodOptional.create=(e,t)=>new ZodOptional({innerType:e,typeName:A.ZodOptional,...processCreateParams(t)});class ZodNullable extends ZodType{_parse(e){const t=this._getType(e);if(t===a.null){return OK(null)}return this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}ZodNullable.create=(e,t)=>new ZodNullable({innerType:e,typeName:A.ZodNullable,...processCreateParams(t)});class ZodDefault extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);let s=t.data;if(t.parsedType===a.undefined){s=this._def.defaultValue()}return this._def.innerType._parse({data:s,path:t.path,parent:t})}removeDefault(){return this._def.innerType}}ZodDefault.create=(e,t)=>new ZodDefault({innerType:e,typeName:A.ZodDefault,defaultValue:typeof t.default==="function"?t.default:()=>t.default,...processCreateParams(t)});class ZodCatch extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);const s={...t,common:{...t.common,issues:[]}};const r=this._def.innerType._parse({data:s.data,path:s.path,parent:{...s}});if(isAsync(r)){return r.then((e=>({status:"valid",value:e.status==="valid"?e.value:this._def.catchValue({get error(){return new ZodError(s.common.issues)},input:s.data})})))}else{return{status:"valid",value:r.status==="valid"?r.value:this._def.catchValue({get error(){return new ZodError(s.common.issues)},input:s.data})}}}removeCatch(){return this._def.innerType}}ZodCatch.create=(e,t)=>new ZodCatch({innerType:e,typeName:A.ZodCatch,catchValue:typeof t.catch==="function"?t.catch:()=>t.catch,...processCreateParams(t)});class ZodNaN extends ZodType{_parse(e){const t=this._getType(e);if(t!==a.nan){const t=this._getOrReturnCtx(e);addIssueToContext(t,{code:i.invalid_type,expected:a.nan,received:t.parsedType});return l}return{status:"valid",value:e.data}}}ZodNaN.create=e=>new ZodNaN({typeName:A.ZodNaN,...processCreateParams(e)});const P=Symbol("zod_brand");class ZodBranded extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);const s=t.data;return this._def.type._parse({data:s,path:t.path,parent:t})}unwrap(){return this._def.type}}class ZodPipeline extends ZodType{_parse(e){const{status:t,ctx:s}=this._processInputParams(e);if(s.common.async){const handleAsync=async()=>{const e=await this._def.in._parseAsync({data:s.data,path:s.path,parent:s});if(e.status==="aborted")return l;if(e.status==="dirty"){t.dirty();return DIRTY(e.value)}else{return this._def.out._parseAsync({data:e.value,path:s.path,parent:s})}};return handleAsync()}else{const e=this._def.in._parseSync({data:s.data,path:s.path,parent:s});if(e.status==="aborted")return l;if(e.status==="dirty"){t.dirty();return{status:"dirty",value:e.value}}else{return this._def.out._parseSync({data:e.value,path:s.path,parent:s})}}}static create(e,t){return new ZodPipeline({in:e,out:t,typeName:A.ZodPipeline})}}class ZodReadonly extends ZodType{_parse(e){const t=this._def.innerType._parse(e);const freeze=e=>{if(isValid(e)){e.value=Object.freeze(e.value)}return e};return isAsync(t)?t.then((e=>freeze(e))):freeze(t)}unwrap(){return this._def.innerType}}ZodReadonly.create=(e,t)=>new ZodReadonly({innerType:e,typeName:A.ZodReadonly,...processCreateParams(t)});function cleanParams(e,t){const s=typeof e==="function"?e(t):typeof e==="string"?{message:e}:e;const r=typeof s==="string"?{message:s}:s;return r}function custom(e,t={},s){if(e)return ZodAny.create().superRefine(((r,n)=>{const a=e(r);if(a instanceof Promise){return a.then((e=>{if(!e){const e=cleanParams(t,r);const a=e.fatal??s??true;n.addIssue({code:"custom",...e,fatal:a})}}))}if(!a){const e=cleanParams(t,r);const a=e.fatal??s??true;n.addIssue({code:"custom",...e,fatal:a})}return}));return ZodAny.create()}const I={object:ZodObject.lazycreate};var A;(function(e){e["ZodString"]="ZodString";e["ZodNumber"]="ZodNumber";e["ZodNaN"]="ZodNaN";e["ZodBigInt"]="ZodBigInt";e["ZodBoolean"]="ZodBoolean";e["ZodDate"]="ZodDate";e["ZodSymbol"]="ZodSymbol";e["ZodUndefined"]="ZodUndefined";e["ZodNull"]="ZodNull";e["ZodAny"]="ZodAny";e["ZodUnknown"]="ZodUnknown";e["ZodNever"]="ZodNever";e["ZodVoid"]="ZodVoid";e["ZodArray"]="ZodArray";e["ZodObject"]="ZodObject";e["ZodUnion"]="ZodUnion";e["ZodDiscriminatedUnion"]="ZodDiscriminatedUnion";e["ZodIntersection"]="ZodIntersection";e["ZodTuple"]="ZodTuple";e["ZodRecord"]="ZodRecord";e["ZodMap"]="ZodMap";e["ZodSet"]="ZodSet";e["ZodFunction"]="ZodFunction";e["ZodLazy"]="ZodLazy";e["ZodLiteral"]="ZodLiteral";e["ZodEnum"]="ZodEnum";e["ZodEffects"]="ZodEffects";e["ZodNativeEnum"]="ZodNativeEnum";e["ZodOptional"]="ZodOptional";e["ZodNullable"]="ZodNullable";e["ZodDefault"]="ZodDefault";e["ZodCatch"]="ZodCatch";e["ZodPromise"]="ZodPromise";e["ZodBranded"]="ZodBranded";e["ZodPipeline"]="ZodPipeline";e["ZodReadonly"]="ZodReadonly"})(A||(A={}));class Class{constructor(...e){}}const instanceOfType=(e,t={message:`Input not instance of ${e.name}`})=>custom((t=>t instanceof e),t);const N=ZodString.create;const O=ZodNumber.create;const j=ZodNaN.create;const $=ZodBigInt.create;const L=ZodBoolean.create;const M=ZodDate.create;const D=ZodSymbol.create;const q=ZodUndefined.create;const z=ZodNull.create;const F=ZodAny.create;const U=ZodUnknown.create;const H=ZodNever.create;const V=ZodVoid.create;const B=ZodArray.create;const W=ZodObject.create;const G=ZodObject.strictCreate;const K=ZodUnion.create;const J=ZodDiscriminatedUnion.create;const Y=ZodIntersection.create;const X=ZodTuple.create;const Q=ZodRecord.create;const ee=ZodMap.create;const te=ZodSet.create;const se=ZodFunction.create;const re=ZodLazy.create;const ne=ZodLiteral.create;const ae=ZodEnum.create;const ie=ZodNativeEnum.create;const oe=ZodPromise.create;const ce=ZodEffects.create;const de=ZodOptional.create;const ue=ZodNullable.create;const le=ZodEffects.createWithPreprocess;const pe=ZodPipeline.create;const ostring=()=>N().optional();const onumber=()=>O().optional();const oboolean=()=>L().optional();const he={string:e=>ZodString.create({...e,coerce:true}),number:e=>ZodNumber.create({...e,coerce:true}),boolean:e=>ZodBoolean.create({...e,coerce:true}),bigint:e=>ZodBigInt.create({...e,coerce:true}),date:e=>ZodDate.create({...e,coerce:true})};const me=null&&INVALID;const fe="2024-11-05";const ge=[fe,"2024-10-07"];const _e="2.0";const ye=K([N(),O().int()]);const ve=N();const be=W({_meta:de(W({progressToken:de(ye)}).passthrough())}).passthrough();const xe=W({method:N(),params:de(be)});const Se=W({_meta:de(W({}).passthrough())}).passthrough();const we=W({method:N(),params:de(Se)});const Ce=W({_meta:de(W({}).passthrough())}).passthrough();const Ze=K([N(),O().int()]);const Te=W({jsonrpc:ne(_e),id:Ze}).merge(xe).strict();const ke=W({jsonrpc:ne(_e)}).merge(we).strict();const Re=W({jsonrpc:ne(_e),id:Ze,result:Ce}).strict();var Ee;(function(e){e[e["ConnectionClosed"]=-1]="ConnectionClosed";e[e["ParseError"]=-32700]="ParseError";e[e["InvalidRequest"]=-32600]="InvalidRequest";e[e["MethodNotFound"]=-32601]="MethodNotFound";e[e["InvalidParams"]=-32602]="InvalidParams";e[e["InternalError"]=-32603]="InternalError"})(Ee||(Ee={}));const Pe=W({jsonrpc:ne(_e),id:Ze,error:W({code:O().int(),message:N(),data:de(U())})}).strict();const Ie=K([Te,ke,Re,Pe]);const Ae=Ce.strict();const Ne=we.extend({method:ne("notifications/cancelled"),params:Se.extend({requestId:Ze,reason:N().optional()})});const Oe=W({name:N(),version:N()}).passthrough();const je=W({experimental:de(W({}).passthrough()),sampling:de(W({}).passthrough()),roots:de(W({listChanged:de(L())}).passthrough())}).passthrough();const $e=xe.extend({method:ne("initialize"),params:be.extend({protocolVersion:N(),capabilities:je,clientInfo:Oe})});const Le=W({experimental:de(W({}).passthrough()),logging:de(W({}).passthrough()),prompts:de(W({listChanged:de(L())}).passthrough()),resources:de(W({subscribe:de(L()),listChanged:de(L())}).passthrough()),tools:de(W({listChanged:de(L())}).passthrough())}).passthrough();const Me=Ce.extend({protocolVersion:N(),capabilities:Le,serverInfo:Oe});const De=we.extend({method:ne("notifications/initialized")});const qe=xe.extend({method:ne("ping")});const ze=W({progress:O(),total:de(O())}).passthrough();const Fe=we.extend({method:ne("notifications/progress"),params:Se.merge(ze).extend({progressToken:ye})});const Ue=xe.extend({params:be.extend({cursor:de(ve)}).optional()});const He=Ce.extend({nextCursor:de(ve)});const Ve=W({uri:N(),mimeType:de(N())}).passthrough();const Be=Ve.extend({text:N()});const We=Ve.extend({blob:N().base64()});const Ge=W({uri:N(),name:N(),description:de(N()),mimeType:de(N())}).passthrough();const Ke=W({uriTemplate:N(),name:N(),description:de(N()),mimeType:de(N())}).passthrough();const Je=Ue.extend({method:ne("resources/list")});const Ye=He.extend({resources:B(Ge)});const Xe=Ue.extend({method:ne("resources/templates/list")});const Qe=He.extend({resourceTemplates:B(Ke)});const et=xe.extend({method:ne("resources/read"),params:be.extend({uri:N()})});const tt=Ce.extend({contents:B(K([Be,We]))});const st=we.extend({method:ne("notifications/resources/list_changed")});const rt=xe.extend({method:ne("resources/subscribe"),params:be.extend({uri:N()})});const nt=xe.extend({method:ne("resources/unsubscribe"),params:be.extend({uri:N()})});const at=we.extend({method:ne("notifications/resources/updated"),params:Se.extend({uri:N()})});const it=W({name:N(),description:de(N()),required:de(L())}).passthrough();const ot=W({name:N(),description:de(N()),arguments:de(B(it))}).passthrough();const ct=Ue.extend({method:ne("prompts/list")});const dt=He.extend({prompts:B(ot)});const ut=xe.extend({method:ne("prompts/get"),params:be.extend({name:N(),arguments:de(Q(N()))})});const lt=W({type:ne("text"),text:N()}).passthrough();const pt=W({type:ne("image"),data:N().base64(),mimeType:N()}).passthrough();const ht=W({type:ne("resource"),resource:K([Be,We])}).passthrough();const mt=W({role:ae(["user","assistant"]),content:K([lt,pt,ht])}).passthrough();const ft=Ce.extend({description:de(N()),messages:B(mt)});const gt=we.extend({method:ne("notifications/prompts/list_changed")});const _t=W({name:N(),description:de(N()),inputSchema:W({type:ne("object"),properties:de(W({}).passthrough())}).passthrough()}).passthrough();const yt=Ue.extend({method:ne("tools/list")});const vt=He.extend({tools:B(_t)});const bt=Ce.extend({content:B(K([lt,pt,ht])),isError:L().default(false).optional()});const xt=bt.or(Ce.extend({toolResult:U()}));const St=xe.extend({method:ne("tools/call"),params:be.extend({name:N(),arguments:de(Q(U()))})});const wt=we.extend({method:ne("notifications/tools/list_changed")});const Ct=ae(["debug","info","notice","warning","error","critical","alert","emergency"]);const Zt=xe.extend({method:ne("logging/setLevel"),params:be.extend({level:Ct})});const Tt=we.extend({method:ne("notifications/message"),params:Se.extend({level:Ct,logger:de(N()),data:U()})});const kt=W({name:N().optional()}).passthrough();const Rt=W({hints:de(B(kt)),costPriority:de(O().min(0).max(1)),speedPriority:de(O().min(0).max(1)),intelligencePriority:de(O().min(0).max(1))}).passthrough();const Et=W({role:ae(["user","assistant"]),content:K([lt,pt])}).passthrough();const Pt=xe.extend({method:ne("sampling/createMessage"),params:be.extend({messages:B(Et),systemPrompt:de(N()),includeContext:de(ae(["none","thisServer","allServers"])),temperature:de(O()),maxTokens:O().int(),stopSequences:de(B(N())),metadata:de(W({}).passthrough()),modelPreferences:de(Rt)})});const It=Ce.extend({model:N(),stopReason:de(ae(["endTurn","stopSequence","maxTokens"]).or(N())),role:ae(["user","assistant"]),content:J("type",[lt,pt])});const At=W({type:ne("ref/resource"),uri:N()}).passthrough();const Nt=W({type:ne("ref/prompt"),name:N()}).passthrough();const Ot=xe.extend({method:ne("completion/complete"),params:be.extend({ref:K([Nt,At]),argument:W({name:N(),value:N()}).passthrough()})});const jt=Ce.extend({completion:W({values:B(N()).max(100),total:de(O().int()),hasMore:de(L())}).passthrough()});const $t=W({uri:N().startsWith("file://"),name:de(N())}).passthrough();const Lt=xe.extend({method:ne("roots/list")});const Mt=Ce.extend({roots:B($t)});const Dt=we.extend({method:ne("notifications/roots/list_changed")});const qt=K([qe,$e,Ot,Zt,ut,ct,Je,Xe,et,rt,nt,St,yt]);const zt=K([Ne,Fe,De,Dt]);const Ft=K([Ae,It,Mt]);const Ut=K([qe,Pt,Lt]);const Ht=K([Ne,Fe,Tt,at,st,wt,gt]);const Vt=K([Ae,Me,jt,ft,dt,Ye,Qe,tt,bt,vt]);class McpError extends Error{constructor(e,t,s){super(`MCP error ${e}: ${t}`);this.code=e;this.data=s}}}};var t={};function __nccwpck_require__(s){var r=t[s];if(r!==undefined){return r.exports}var n=t[s]={exports:{}};var a=true;try{e[s](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete t[s]}return n.exports}(()=>{__nccwpck_require__.d=(e,t)=>{for(var s in t){if(__nccwpck_require__.o(t,s)&&!__nccwpck_require__.o(e,s)){Object.defineProperty(e,s,{enumerable:true,get:t[s]})}}}})();(()=>{__nccwpck_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var s={};const{Server:r}=__nccwpck_require__(872);const{StdioServerTransport:n}=__nccwpck_require__(326);const{CallToolRequestSchema:a,ListToolsRequestSchema:i}=__nccwpck_require__(55);const{spawn:o}=__nccwpck_require__(317);const c=__nccwpck_require__(896);const d=__nccwpck_require__(928);const u=__nccwpck_require__(857);const l={server:{name:"archlens-mcp-server",version:"2.0.0"},binary:{name:process.env.ARCHLENS_BINARY||"archlens",searchPaths:[process.env.ARCHLENS_PATH,d.resolve(process.cwd(),"target","release"),d.resolve(process.cwd(),"target","debug"),d.resolve(d.dirname(__filename),"target","release"),d.resolve(d.dirname(__filename),"target","debug"),d.resolve(d.dirname(__filename)),d.resolve(process.cwd())].filter(Boolean),timeout:6e4},paths:{workingDirectory:process.env.ARCHLENS_WORKDIR||process.cwd()},language:{locale:"en_US.UTF-8",forceEnglish:true},windows:{useShell:true,autoElevate:process.env.ARCHLENS_AUTO_ELEVATE==="true"},patterns:{include:["**/*.rs","**/*.ts","**/*.js","**/*.py","**/*.java","**/*.cpp","**/*.cc","**/*.cxx","**/*.c","**/*.h","**/*.hpp","**/*.hxx","**/*.go","**/*.php","**/*.rb","**/*.cs","**/*.kt","**/*.swift","**/*.dart","**/*.vue","**/*.jsx","**/*.tsx","**/*.html","**/*.css","**/*.scss","**/*.sass","**/*.json","**/*.yaml","**/*.yml","**/*.xml","**/*.md","**/*.txt"],exclude:["**/target/**","**/node_modules/**","**/.git/**","**/dist/**","**/build/**","**/out/**","**/.next/**","**/.nuxt/**","**/coverage/**","**/tmp/**","**/temp/**","**/*.class","**/*.o","**/*.obj"]},limits:{maxDepth:20,maxFiles:1e3,scanDepth:15,maxFileSize:1e6},textExtensions:[".rs",".ts",".js",".py",".java",".cpp",".cc",".cxx",".c",".h",".hpp",".hxx",".go",".php",".rb",".cs",".kt",".swift",".dart",".vue",".jsx",".tsx",".html",".css",".scss",".sass",".json",".yaml",".yml",".xml",".md",".txt"]};class Logger{constructor(e=process.env.ARCHLENS_DEBUG==="true"){this.enabled=e}debug(e){if(this.enabled){process.stderr.write(`[DEBUG] ${e}\n`)}}info(e){if(this.enabled){process.stderr.write(`[INFO] ${e}\n`)}}error(e){if(this.enabled){process.stderr.write(`[ERROR] ${e}\n`)}}}const p=new Logger;function getArchLensBinary(){const e=u.platform();const t=e==="win32"?".exe":"";const s=`${l.binary.name}${t}`;try{const t=e==="win32"?"where":"which";const{execSync:s}=__nccwpck_require__(317);const r=s(`${t} ${l.binary.name}`,{encoding:"utf8",stdio:"pipe"});if(r.trim()){p.debug(`Found binary in PATH: ${r.trim()}`);return l.binary.name}}catch(e){p.debug(`Binary not in PATH: ${e.message}`)}for(const e of l.binary.searchPaths){const t=d.join(e,s);if(c.existsSync(t)){try{c.accessSync(t,c.constants.F_OK|c.constants.X_OK);p.debug(`Found executable binary: ${t}`);return t}catch(e){p.debug(`Binary found but not executable: ${t}`)}}}throw new Error(`❌ ArchLens binary '${s}' not found in search paths: ${l.binary.searchPaths.join(", ")}\n`+`🔧 Solutions:\n`+`  1. Build: cargo build --release\n`+`  2. Set ARCHLENS_PATH=/path/to/binary\n`+`  3. Add binary to PATH\n`+`  4. Set ARCHLENS_BINARY=custom_name`)}function resolveProjectPath(e){if(!e||typeof e!=="string"){throw new Error("project_path is required and must be a string")}let t;if(d.isAbsolute(e)){t=d.normalize(e);p.debug(`Using absolute path: ${t}`)}else{t=d.resolve(l.paths.workingDirectory,e);p.debug(`Converted relative path "${e}" to absolute: ${t}`)}try{if(!c.existsSync(t)){throw new Error(`Path does not exist: ${t}`)}const e=c.statSync(t);if(!e.isDirectory()){throw new Error(`Path is not a directory: ${t}`)}c.accessSync(t,c.constants.R_OK)}catch(e){if(e.code==="EACCES"||e.code==="EPERM"){throw new Error(`Access denied to path: ${t}\n`+`🔧 Windows Solutions:\n`+`  • Run as Administrator\n`+`  • Check folder permissions\n`+`  • Disable antivirus temporarily\n`+`  • Ensure files are not in use`)}throw e}return t}function getWindowsExecutionOptions(){if(u.platform()!=="win32"){return{}}return{shell:l.windows.useShell,windowsHide:true,env:{...process.env,LANG:"en_US.UTF-8",LC_ALL:"en_US.UTF-8",RUST_BACKTRACE:"0",ARCHLENS_LANG:"en"}}}async function checkWindowsAdminRights(){if(u.platform()!=="win32"){return true}try{const{execSync:e}=__nccwpck_require__(317);const t=e('net session >nul 2>&1 && echo "ADMIN" || echo "NOT_ADMIN"',{encoding:"utf8",stdio:"pipe"});const s=t.trim().includes("ADMIN");p.debug(`Windows admin check: ${s?"ADMIN":"NOT_ADMIN"}`);return s}catch(e){p.debug(`Admin check failed: ${e.message}`);return false}}async function tryAutoElevation(){if(!l.windows.autoElevate||u.platform()!=="win32"){return false}try{const{spawn:e}=__nccwpck_require__(317);const t=d.resolve(__filename);const s=d.dirname(t);const r=["-Command",`Start-Process PowerShell -Verb RunAs -ArgumentList "-Command", "cd '${s}'; node '${t}'"`];p.debug("Attempting automatic admin elevation...");e("powershell",r,{stdio:"ignore",detached:true});await new Promise((e=>setTimeout(e,2e3)));return true}catch(e){p.debug(`Auto elevation failed: ${e.message}`);return false}}function createAdminElevationInstructions(e,t){const s=d.resolve(__filename);const r=d.dirname(s);const n=`Start-Process PowerShell -Verb RunAs -ArgumentList "-Command", "cd '${r}'; node '${s}'"`;const a=l.windows.autoElevate?`**AUTO-ELEVATION:** Enabled (ARCHLENS_AUTO_ELEVATE=true)`:`**AUTO-ELEVATION:** Disabled (set ARCHLENS_AUTO_ELEVATE=true to enable automatic elevation)`;return`🔐 WINDOWS ADMIN RIGHTS REQUIRED\n\n**Reason:** ArchLens analyze_project requires administrator privileges to scan all files and directories.\n\n${a}\n\n**AUTOMATIC SOLUTION:**\nRun this PowerShell command to restart with admin rights:\n\n\`\`\`powershell\n${n}\n\`\`\`\n\n**MANUAL SOLUTION:**\n1. Close current session\n2. Right-click PowerShell/CMD → "Run as Administrator"  \n3. Navigate to: ${r}\n4. Run: node "${s}"\n5. Retry the analyze_project command\n\n**ENVIRONMENT SETUP:**\n\`\`\`bash\n# Enable automatic elevation (optional)\nexport ARCHLENS_AUTO_ELEVATE=true\n\n# Then retry analyze_project\n\`\`\`\n\n**PROJECT PATH:** ${t}\n**CURRENT USER:** ${u.userInfo().username}\n**PLATFORM:** ${u.platform()} ${u.release()}\n\n**Alternative:** Use 'get_project_structure' which works without admin rights.`}async function executeArchlensCommand(e,t,s=[],r={}){return new Promise(((n,a)=>{const i=getArchLensBinary();const c=d.isAbsolute(t)?t:d.resolve(t);const h=[e,c,...s];const m={stdio:["pipe","pipe","pipe"],cwd:l.paths.workingDirectory,encoding:"utf8",timeout:l.binary.timeout,env:{...process.env,LANG:"en_US.UTF-8",LC_ALL:"en_US.UTF-8",RUST_BACKTRACE:"0",ARCHLENS_LANG:"en"},...getWindowsExecutionOptions(),...r};p.debug(`Executing: ${i} ${h.join(" ")}`);p.debug(`Working directory: ${m.cwd}`);p.debug(`Absolute project path: ${c}`);const f=o(i,h,m);let g="";let _="";let y=false;const v=setTimeout((()=>{y=true;f.kill("SIGTERM");p.error(`Command timed out after ${l.binary.timeout}ms`)}),l.binary.timeout);f.stdout.on("data",(e=>{g+=e.toString("utf8")}));f.stderr.on("data",(e=>{_+=e.toString("utf8")}));f.on("close",(e=>{clearTimeout(v);p.debug(`Command finished with code: ${e}`);p.debug(`Stdout length: ${g.length}`);p.debug(`Stderr length: ${_.length}`);if(y){a(new Error(`Command execution timed out after ${l.binary.timeout}ms`));return}if(e===0){if(g.trim().length===0){n({status:"success",message:"Command executed successfully (empty output)",output:_.length>0?_:"No output generated",warning:"empty_stdout"})}else{try{const e=JSON.parse(g);n(e)}catch(e){n({status:"success",message:"Command executed successfully",output:g})}}}else{if(u.platform()==="win32"&&(_.includes("Access denied")||e===5)){a(new Error(`Windows Access Denied (Code ${e})\n`+`🔧 Solutions:\n`+`  • Run PowerShell/CMD as Administrator\n`+`  • Check antivirus is not blocking binary\n`+`  • Ensure no files are locked by other processes\n`+`  • Check Windows Defender exclusions\n`+`Original error: ${_}`))}else{a(new Error(_||`Command failed with exit code ${e}`))}}}));f.on("error",(e=>{clearTimeout(v);if(e.code==="ENOENT"){a(new Error(`Binary not found: ${i}\n`+`🔧 Solutions:\n`+`  • Ensure binary is built: cargo build --release\n`+`  • Check PATH includes binary location\n`+`  • Set ARCHLENS_PATH environment variable`))}else if(e.code==="EACCES"){a(new Error(`Permission denied executing: ${i}\n`+`🔧 Solutions:\n`+`  • Make binary executable: chmod +x ${i}\n`+`  • Run with administrator privileges\n`+`  • Check file permissions`))}else{a(new Error(`Failed to execute ArchLens: ${e.message} (${e.code})`))}}))}))}function createMCPResponse(e,t,s=null,r=null){if(s){return{content:[{type:"text",text:`❌ ERROR ${getToolDisplayName(e)}\n\nFailed to ${getToolAction(e)}: ${r||"unknown path"}\n\n**Reason:** ${s.message}\n\n**Project path:** ${r||"n/a"}\n**Error time:** ${(new Date).toLocaleString("en-US")}\n**Platform:** ${u.platform()} ${u.release()}`}],isError:true}}return{content:[{type:"text",text:formatToolResult(e,t,r)}]}}function getToolDisplayName(e){const t={analyze_project:"PROJECT ANALYSIS",export_ai_compact:"ARCHITECTURE ANALYSIS",get_project_structure:"STRUCTURE RETRIEVAL",generate_diagram:"DIAGRAM GENERATION"};return t[e]||"TOOL"}function getToolAction(e){const t={analyze_project:"analyze project",export_ai_compact:"export AI compact analysis",get_project_structure:"get project structure",generate_diagram:"generate diagram"};return t[e]||"perform operation"}class ResponseFormatter{static formatAnalysisResult(e,t){const s=typeof e==="string"?JSON.parse(e):e;return`# 🔍 PROJECT ANALYSIS BRIEF\n\n**Path:** ${t}\n**Analysis performed:** ${(new Date).toLocaleString("en-US")}\n\n## 📊 Key metrics\n- **Total files:** ${s.total_files||"n/a"}\n- **Lines of code:** ${s.total_lines||"n/a"}\n- **Scan date:** ${s.scanned_at?new Date(s.scanned_at).toLocaleString("en-US"):"n/a"}\n\n## 🗂️ File distribution\n${s.file_types?Object.entries(s.file_types).sort((([,e],[,t])=>t-e)).slice(0,10).map((([e,t])=>`- **.${e}**: ${t} file(s)`)).join("\n"):"Data unavailable"}\n\n## 📈 Architectural assessment\n${this.getArchitecturalRisk(s.total_files)}\n\n## 🎯 Deep analysis capabilities\nUse \`export_ai_compact\` to discover:\n- **Code Smells:** long methods, magic numbers, code duplication\n- **SOLID principles:** violations of single responsibility, open/closed\n- **Architectural antipatterns:** God Objects, tight coupling, circular dependencies\n- **Quality metrics:** cyclomatic complexity, technical debt\n\n*This is a preliminary assessment. Use specialized tools for detailed analysis.*`}static formatExportResult(e,t){if(e.output&&typeof e.output==="string"&&e.output.trim().length>0){return e.output}return`❌ ARCHITECTURE ANALYSIS ERROR\n    \nFailed to perform AI Compact export for project: ${t}\n\n**Reason:** ${e.message||"Unknown error"}\n**Details:** ${e.output||e.stderr||"No details"}\n\n**What AI Compact should have analyzed:**\n- Code Smells (20+ types): long methods, magic numbers, code duplication\n- SOLID principles: single responsibility, open/closed, Liskov substitution\n- Architectural antipatterns: God Objects, tight coupling, circular dependencies\n- Quality metrics: cyclomatic complexity, cognitive complexity, maintainability index\n\n**Path:** ${t}\n**Error time:** ${(new Date).toLocaleString("en-US")}`}static formatStructureResult(e,t){const s=typeof e==="string"?JSON.parse(e):e;return`# 📁 PROJECT STRUCTURE OVERVIEW\n\n**Path:** ${t}\n**Analysis performed:** ${(new Date).toLocaleString("en-US")}\n\n## 📊 General statistics\n- **Total files:** ${s.total_files||"n/a"}\n- **Total lines:** ${s.total_lines||"n/a"}\n- **Files shown:** ${s.files?Math.min(s.files.length,s.total_files||0):"n/a"} (limit: ${l.limits.maxFiles})\n\n## 🗂️ File types\n${s.file_types?Object.entries(s.file_types).sort((([,e],[,t])=>t-e)).map((([e,t])=>`- **.${e}**: ${t} file(s)`)).join("\n"):"Data unavailable"}\n\n## 🏗️ Architectural layers\n${s.layers?s.layers.map((e=>`- **${e}**`)).join("\n"):"- Layers not identified"}\n\n## 📄 Key files (top 15)\n${s.files?s.files.slice(0,15).map((e=>`- \`${e.path}\` (${e.extension}, ${(e.size/1024).toFixed(1)}KB)`)).join("\n")+(s.files.length>15?`\n\n... and ${s.files.length-15} more file(s)`:""):"Files not found"}\n\n*Structure overview complete. Use specialized tools for detailed problem analysis.*`}static formatDiagramResult(e,t){if(e.diagram&&typeof e.diagram==="string"){return`# 📊 ARCHITECTURAL DIAGRAM\n\n**Project:** ${t}\n**Type:** ${e.diagram_type||"unknown"}\n**Created:** ${(new Date).toISOString()}\n\n## Mermaid Diagram\n\n\`\`\`mermaid\n${e.diagram}\n\`\`\`\n\n*Generated by ArchLens for AI analysis*`}return`❌ DIAGRAM GENERATION ERROR\n    \nFailed to create diagram for project: ${t}\n\n**Type:** ${e.diagram_type||"unknown"}\n**Reason:** ${e.message||"Unknown error"}\n\n**Path:** ${t}\n**Error time:** ${(new Date).toLocaleString("en-US")}`}static getArchitecturalRisk(e){if(!e)return"- Risk assessment unavailable";if(e>100){return`⚠️ **LARGE PROJECT** (${e} files)\n    - High architectural risk\n    - Likely circular dependencies\n    - Requires modular architecture control`}else if(e>50){return`✅ **MEDIUM PROJECT** (${e} files)\n    - Manageable size, moderate architectural risks\n    - Possible local code quality issues`}else{return`✅ **SMALL PROJECT** (${e} files)\n    - Compact structure, low architectural risks\n    - Main issues: code smells, code quality`}}}function formatToolResult(e,t,s){switch(e){case"analyze_project":return ResponseFormatter.formatAnalysisResult(t,s);case"export_ai_compact":return ResponseFormatter.formatExportResult(t,s);case"get_project_structure":return ResponseFormatter.formatStructureResult(t,s);case"generate_diagram":return ResponseFormatter.formatDiagramResult(t,s);default:return JSON.stringify(t,null,2)}}async function handleAnalyzeProject(e){const{project_path:t}=e;try{if(!t){throw new Error("project_path is required")}const e=resolveProjectPath(t);p.debug("Attempting direct binary execution - Rust handles access errors gracefully");const s=await executeArchlensCommand("analyze",e);return createMCPResponse("analyze_project",s,null,e)}catch(e){if(u.platform()==="win32"&&(e.message.includes("Access denied")||e.message.includes("os error 5")||e.message.includes("Отказано в доступе"))&&e.message.includes("permission")){p.debug("Genuine permission error detected - suggesting admin elevation");return{content:[{type:"text",text:`⚠️ PERMISSION ERROR DETECTED\n\n**The binary encountered a genuine permission issue.**\n\n**RECOMMENDED SOLUTIONS:**\n\n**Option 1: Alternative commands (work without admin):**\n- get_project_structure - ✅ Full structure analysis\n- export_ai_compact - ✅ Complete AI analysis  \n- generate_diagram - ✅ Architecture diagrams\n\n**Option 2: Admin elevation (only if needed):**\n1. Right-click PowerShell → "Run as Administrator"\n2. cd "${d.dirname(d.resolve(__filename))}"\n3. node "${d.resolve(__filename)}"\n\n**Note:** Most projects work fine without admin rights. Try Option 1 first!\n\n**Error details:** ${e.message}`}],isError:false}}return createMCPResponse("analyze_project",null,e,t)}}async function createLimitedAnalysis(e){p.debug(`Creating limited analysis for: ${e}`);try{const t=createManualStructure(e);const s=t.structure;return{status:"success",method:"limited_analysis",total_files:s.total_files,total_lines:s.total_lines,file_types:s.file_types,layers:s.layers,project_path:e,analysis_date:(new Date).toISOString(),limitations:["Limited analysis mode (no admin rights)","Some system files may be inaccessible","Use export_ai_compact for detailed analysis"],recommendation:"For full analysis, use 'export_ai_compact' and 'get_project_structure' commands"}}catch(e){throw new Error(`Limited analysis failed: ${e.message}`)}}async function handleExportAICompact(e){const{project_path:t,output_file:s}=e;try{if(!t){throw new Error("project_path is required")}const e=resolveProjectPath(t);const r=["ai_compact"];if(s){r.push(s)}const n=await executeArchlensCommand("export",e,r);return createMCPResponse("export_ai_compact",n,null,e)}catch(e){return createMCPResponse("export_ai_compact",null,e,t)}}async function handleGetProjectStructure(e){const{project_path:t}=e;try{if(!t){throw new Error("project_path is required")}const e=resolveProjectPath(t);try{const t=await executeArchlensCommand("structure",e);return createMCPResponse("get_project_structure",t,null,e)}catch(t){const s=createManualStructure(e);return createMCPResponse("get_project_structure",s,null,e)}}catch(e){return createMCPResponse("get_project_structure",null,e,t)}}async function handleGenerateDiagram(e){const{project_path:t,diagram_type:s="mermaid",output_file:r}=e;try{if(!t){throw new Error("project_path is required")}const e=resolveProjectPath(t);const n=r||d.resolve(l.paths.workingDirectory,`temp_diagram_${Date.now()}.${s==="mermaid"?"mmd":s}`);try{await executeArchlensCommand("diagram",e,[s,n]);if(c.existsSync(n)){const t=c.readFileSync(n,"utf8");if(!r){c.unlinkSync(n)}const a={status:"success",diagram:t,diagram_type:s,output_file:r||"stdout",size:t.length};return createMCPResponse("generate_diagram",a,null,e)}else{throw new Error(`Diagram file not created: ${n}`)}}catch(e){throw new Error(`Diagram generation failed: ${e.message}`)}}catch(e){return createMCPResponse("generate_diagram",null,e,t)}}function createManualStructure(e){const t={total_files:0,total_lines:0,file_types:{},layers:[],files:[]};try{const scanDirectory=(s,r=0)=>{if(r>l.limits.scanDepth)return;const n=c.readdirSync(s);for(const a of n){const n=d.join(s,a);try{const s=c.statSync(n);if(s.isDirectory()){const e=["node_modules",".git","target","dist","build",".next",".nuxt"];if(!e.includes(a)&&!a.startsWith(".")){scanDirectory(n,r+1)}}else{const r=d.extname(a).toLowerCase();const i=d.relative(d.resolve(e),n);t.total_files++;t.file_types[r]=(t.file_types[r]||0)+1;if(t.files.length<l.limits.maxFiles){let e=0;try{if(l.textExtensions.includes(r)&&s.size<l.limits.maxFileSize){const t=c.readFileSync(n,"utf8");e=t.split("\n").length}}catch(t){p.debug(`Cannot read file ${n}: ${t.message}`);e=0}t.files.push({path:i,name:a,extension:r,size:s.size,lines:e});t.total_lines+=e}}}catch(e){p.debug(`File access error ${n}: ${e.message}`)}}};scanDirectory(e);const s=["src","lib","components","utils","api","core","ui","services","models","views","controllers"];t.layers=s.filter((t=>c.existsSync(d.join(e,t))))}catch(e){t.error=e.message}return{status:"success",structure:t,project_path:e,scanned_at:(new Date).toISOString(),method:"manual_scan"}}const h=new r({name:l.server.name,version:l.server.version},{capabilities:{tools:{}}});h.setRequestHandler(i,(async()=>({tools:[{name:"export_ai_compact",description:"🤖 AI EXPORT - Full architecture analysis (~2800 tokens) with problem discovery: Code Smells (20+ types: long methods, magic numbers, code duplication), SOLID principles, architectural antipatterns (God Objects, tight coupling), circular dependencies, quality metrics (cyclomatic/cognitive complexity, tech debt), recommendations for refactoring.",inputSchema:{type:"object",properties:{project_path:{description:"Path to the project for analysis",type:"string"},output_file:{description:"Path to save the result (optional)",type:"string"},focus_critical_only:{description:"Show only critical problems: God Objects, circular dependencies, high complexity, SOLID violations",type:"boolean"},include_diff_analysis:{description:"Include comparison with previous versions for degradation analysis",type:"boolean"}},required:["project_path"]}},{name:"analyze_project",description:"📊 SHORT ANALYSIS - Basic project statistics with a preliminary assessment of problems: project size, file distribution, architectural risk assessment (small/medium/large), recommendations for deep analysis via export_ai_compact.",inputSchema:{type:"object",properties:{project_path:{description:"Path to the project for analysis",type:"string"},verbose:{description:"Detailed output with additional metrics and warnings",type:"boolean"},analyze_dependencies:{description:"Analyze module dependencies to identify circular dependencies",type:"boolean"},extract_comments:{description:"Extract comments and analyze documentation quality",type:"boolean"},generate_summaries:{description:"Generate brief descriptions of components with potential problems",type:"boolean"},include_patterns:{description:"File patterns to include (e.g., ['**/*.rs', '**/*.ts'])",type:"array",items:{type:"string"}},exclude_patterns:{description:"File patterns to exclude",type:"array",items:{type:"string"}},max_depth:{description:"Maximum directory depth for scanning",type:"integer"}},required:["project_path"]}},{name:"generate_diagram",description:"📈 DIAGRAM GENERATION - Creates an architectural diagram with visualization of problems: dependencies between components, problematic connections (circular dependencies marked in red), complexity metrics, architectural layers. For Mermaid returns ready code.",inputSchema:{type:"object",properties:{project_path:{description:"Path to the project for analysis",type:"string"},diagram_type:{description:"Diagram type: mermaid (default), svg, dot",type:"string",enum:["mermaid","svg","dot"]},include_metrics:{description:"Include quality metrics in the diagram: cyclomatic complexity, coupling, problematic components",type:"boolean"},output_file:{description:"Path to save the diagram (optional)",type:"string"}},required:["project_path"]}},{name:"get_project_structure",description:"📁 PROJECT STRUCTURE - Hierarchical structure with structural problem detection: incorrect layer organization, mismatch with architectural patterns, files candidates for refactoring (large sizes), metrics by file types.",inputSchema:{type:"object",properties:{project_path:{description:"Path to the project",type:"string"},show_metrics:{description:"Include file metrics: size, lines of code, complexity assessment",type:"boolean"},max_files:{description:"Maximum number of files in output (default 1000)",type:"integer"}},required:["project_path"]}}]})));h.setRequestHandler(a,(async e=>{const{name:t,arguments:s}=e.params;try{if(t==="analyze_project"){return await handleAnalyzeProject(s)}else if(t==="export_ai_compact"){return await handleExportAICompact(s)}else if(t==="get_project_structure"){return await handleGetProjectStructure(s)}else if(t==="generate_diagram"){return await handleGenerateDiagram(s)}else{throw new Error(`Unknown tool: ${t}`)}}catch(e){return createMCPResponse(t,null,e,s.project_path)}}));async function main(){const e=new n;await h.connect(e);p.info("🏗️ ArchLens MCP Server v2.0.0 started - CRITICAL FIXES APPLIED");p.info("✅ NO HARDCODED PATHS | NO SIDE EFFECTS | PROPER '.' SUPPORT | UNIFIED LANGUAGE | WINDOWS FIXES");process.stdin.resume()}main().catch((e=>{p.error(`Server startup failed: ${e.message}`);process.exit(1)}));module.exports=s})();